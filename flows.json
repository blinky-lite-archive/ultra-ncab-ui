[
    {
        "id": "8475ab9.3d26058",
        "type": "tab",
        "label": "Custom App",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e17f7487.2a78e8",
        "type": "tab",
        "label": "dataLogger",
        "disabled": false,
        "info": ""
    },
    {
        "id": "90f83725.6dae08",
        "type": "tab",
        "label": "Utility Apps",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dc20c6e0.0feb98",
        "type": "tab",
        "label": "scalarDevice",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b94899c9.b16088",
        "type": "tab",
        "label": "vectorDevice",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ca529822.9112f8",
        "type": "subflow",
        "name": "HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "99bb1519.85fc18"
                    }
                ]
            }
        ],
        "out": [],
        "env": []
    },
    {
        "id": "fcfe7ca7.f566a",
        "type": "subflow",
        "name": "Core CSS",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "ba2c1c11.88703"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 80,
                "wires": [
                    {
                        "id": "ba2c1c11.88703",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "e3c68b88.d82258",
        "type": "subflow",
        "name": "App CSS",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "f5a9eda8.5c5bc"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 80,
                "wires": [
                    {
                        "id": "f5a9eda8.5c5bc",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "2c5d25cb.3428ca",
        "type": "subflow",
        "name": "App NavBar",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "c104210d.418eb"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "c104210d.418eb",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "7eddf0fe.4ce23",
        "type": "subflow",
        "name": "Core NavBar",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "d08de07e.32d22"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "d08de07e.32d22",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "f22a539a.a67b3",
        "type": "subflow",
        "name": "Core HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "e4d36fde.932ed"
                    }
                ]
            }
        ],
        "out": [],
        "env": []
    },
    {
        "id": "8341090a.df9758",
        "type": "subflow",
        "name": "App HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "966e270e.701e48"
                    }
                ]
            }
        ],
        "out": [],
        "env": []
    },
    {
        "id": "e13648d6.d698c8",
        "type": "subflow",
        "name": "Log Setting",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 160,
                "wires": [
                    {
                        "id": "347f36fe.94ed7a"
                    }
                ]
            }
        ],
        "out": [],
        "env": []
    },
    {
        "id": "df70f6f.9e4ed08",
        "type": "subflow",
        "name": "Scalar Device Menu",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 0,
                "y": 80,
                "wires": [
                    {
                        "id": "ddfc02aa.3af39"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 540,
                "y": 80,
                "wires": [
                    {
                        "id": "e98d4d33.bcca2",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Chill Detector",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "3c1c519e.83272e",
        "type": "websocket-listener",
        "z": "",
        "path": "/scalarArchivePlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "8d993328.9d4c4",
        "type": "websocket-listener",
        "z": "",
        "path": "/scalarPlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "3c933d8a.80b7a2",
        "type": "websocket-listener",
        "z": "",
        "path": "/vectorPlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "869ccabd.6400e8",
        "type": "websocket-listener",
        "z": "",
        "path": "/vectorArchivePlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "3d5cd97c.77df96",
        "type": "websocket-listener",
        "z": "",
        "path": "/scalarViewer/websocket",
        "wholemsg": "false"
    },
    {
        "id": "84d80994.260508",
        "type": "mqtt-broker",
        "z": "",
        "name": "MQTT Broker",
        "broker": "$(MQTTSERVERIP)",
        "port": "1883",
        "clientid": "$(MQTTCLIENTID)",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "2b65833e.87911c",
        "type": "websocket-listener",
        "z": "",
        "path": "/scalarAlarmScanner/websocket",
        "wholemsg": "false"
    },
    {
        "id": "9cd5ff5e.caf86",
        "type": "mongodb3",
        "z": "",
        "uri": "$(MONGODBIP)",
        "name": "blinky-lite",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "23623a1c.e4ce46",
        "type": "nexmobasic",
        "z": ""
    },
    {
        "id": "6acefdd9.69f124",
        "type": "JsonWebToken_config",
        "z": "",
        "name": "blinky-lite-core-jwt-key",
        "secret": "$(JWTKEYSECRET)"
    },
    {
        "id": "e6c7842e.bc4f98",
        "type": "websocket-listener",
        "z": "",
        "path": "/ultra-ncab/websocket",
        "wholemsg": "false"
    },
    {
        "id": "47794345.2e8b8c",
        "type": "websocket-listener",
        "z": "",
        "path": "/access-log/websocket",
        "wholemsg": "false"
    },
    {
        "id": "fcd0f0f1.e1a0f",
        "type": "websocket-listener",
        "z": "",
        "path": "/settings-log/websocket",
        "wholemsg": "false"
    },
    {
        "id": "9d73700b.2888b",
        "type": "websocket-listener",
        "z": "",
        "path": "/shiverSim/websocket",
        "wholemsg": "false"
    },
    {
        "id": "84a0efe3.385ca",
        "type": "websocket-listener",
        "z": "",
        "path": "/setServerTime/websocket",
        "wholemsg": "false"
    },
    {
        "id": "d8aea031.7f89d",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarPlotter",
        "url": "/scalarPlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 40,
        "wires": [
            [
                "7b9e1c55.c445c4"
            ]
        ]
    },
    {
        "id": "761db118.51922",
        "type": "websocket in",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarPlotter",
        "server": "8d993328.9d4c4",
        "client": "",
        "x": 110,
        "y": 320,
        "wires": [
            [
                "5ddca0da.79e6e"
            ]
        ]
    },
    {
        "id": "472ae883.652f08",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarPlotter",
        "server": "8d993328.9d4c4",
        "client": "",
        "x": 1630,
        "y": 300,
        "wires": []
    },
    {
        "id": "5ddca0da.79e6e",
        "type": "json",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 380,
        "wires": [
            [
                "f445d1dd.72e4"
            ]
        ]
    },
    {
        "id": "f445d1dd.72e4",
        "type": "switch",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDeviceList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDeviceValues",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getArchiveValues",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sendSettingToMqtt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getJwtToken",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 430,
        "y": 380,
        "wires": [
            [
                "7ef5d7af.5aeed8"
            ],
            [
                "80b3fbd.ba21908"
            ],
            [
                "ccb4a4a2.49a2e8"
            ],
            [
                "8e79cfec.1347"
            ],
            [
                "98c9d4ad.3f54f8"
            ],
            [
                "4819746c.65db8c"
            ],
            [
                "174cb425.13a64c"
            ]
        ]
    },
    {
        "id": "7ef5d7af.5aeed8",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getDeviceList",
        "func": "var newMsg = \n{\n    topic           : 'getDeviceList',\n    userID          : msg.payload.userID,\n    payload         : [{},{projection:{deviceType:1, _id:0}}]\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 300,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "b6d95279.1b494",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Prop</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n                <td width=\"8%\" align=\"center\"><span class=\"tableHeading \">value</span></td>\n                <td width=\"7%\" align=\"center\"><span class=\"tableHeading \">unit</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">y1</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">y2</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">pt</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">1</span></td>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"propSelect0\" onchange=\"propSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText \" id=\"valueSelect0\"></span></td>\n                <td align=\"center\"><span class=\"tableText \" id=\"unitSelect0\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_0y1\" type=\"radio\" name=\"plotAxis_0\"  value=\"y1\"  onchange='selectAxis(0,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_0y2\" type=\"radio\" name=\"plotAxis_0\"  value=\"y2\"  onchange='selectAxis(0,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_0\" type=\"checkbox\" name=\"pts_0\"  value=\"pts\"  onchange='selectPts(0)'></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">2</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect1\" onchange=\"deviceSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect1\" onchange=\"nameSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect1\" onchange=\"propSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect1\" onchange=\"attrSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect1\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect1\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_1y1\" type=\"radio\" name=\"plotAxis_1\"  value=\"y1\"  onchange='selectAxis(1,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_1y2\" type=\"radio\" name=\"plotAxis_1\"  value=\"y2\"  onchange='selectAxis(1,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_1\" type=\"checkbox\" name=\"pts_1\"  value=\"pts\"  onchange='selectPts(1)'></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">3</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect2\" onchange=\"deviceSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect2\" onchange=\"nameSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect2\" onchange=\"propSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect2\" onchange=\"attrSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect2\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect2\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_2y1\" type=\"radio\" name=\"plotAxis_2\"  value=\"y1\"  onchange='selectAxis(2,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_2y2\" type=\"radio\" name=\"plotAxis_2\"  value=\"y2\"  onchange='selectAxis(2,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_2\" type=\"checkbox\" name=\"pts_2\"  value=\"pts\"  onchange='selectPts(2)'></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">4</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect3\" onchange=\"deviceSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect3\" onchange=\"nameSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect3\" onchange=\"propSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect3\" onchange=\"attrSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect3\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect3\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_3y1\" type=\"radio\" name=\"plotAxis_3\"  value=\"y1\"  onchange='selectAxis(3,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_3y2\" type=\"radio\" name=\"plotAxis_3\"  value=\"y2\"  onchange='selectAxis(3,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_3\" type=\"checkbox\" name=\"pts_3\"  value=\"pts\"  onchange='selectPts(3)'></td>\n            </tr>\n        </table>\n    </div>\n    <div>\n        <div class='row'>\n            <div class='col-md-6'>\n                <table>\n                    <tr>\n                        <td width=50%  align=\"center\"class=\"tableHeading\">Span</td>\n                        <td width=50% align=\"center\"></td>\n                    </tr>\n                    <tr>\n                         <td align=\"center\">\n                            <input class=\"form-control\" id=\"plotLength\" type=\"text\" value=\"300\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button class=\"btn jumbotron-button\" id=\"startPlotButton\" type=\"button\" onclick=\"startPlot()\">Start Plot</button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n        <div class='row'>\n            <div class='col-md-12'>\n                <div class='card'>\n                    <p class='card-title'>Time Plot</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"timePlot\" width=\"100%\" class=\"plot\"></div> \n                    </div>\n                </div>\n            </div>\n        </div>\n     </div>",
        "output": "str",
        "x": 850,
        "y": 40,
        "wires": [
            [
                "72941646.0206b8"
            ]
        ]
    },
    {
        "id": "2b6693c7.697dbc",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse device list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nvar deviceList = [];\ndeviceList[0] = msg.payload[0].deviceType;\nif (numDevices > 1)\n{\n    for (var idevice = 1; idevice < numDevices; ++idevice)\n    {\n        var deviceAlreadyFound = false;\n        for (ii = 0; ii < idevice; ++ii)\n        {\n            if (msg.payload[idevice].deviceType == deviceList[ii]) deviceAlreadyFound = true;\n        }\n        if (!deviceAlreadyFound) deviceList[idevice] = msg.payload[idevice].deviceType;\n    }\n}\n\nreturn {\n    topic:'getDeviceList',\n    payload:{\n        topic           : 'getDeviceList',\n        payload         : deviceList,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1240,
        "y": 300,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "ccb4a4a2.49a2e8",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getAttrList",
        "func": "var projectionFilter =  {projection:{readings:1,_id:0}};\nif (msg.payload.prop == 'settings') projectionFilter =  {projection:{settings:1,_id:0}};\nvar newMsg = \n{\n    topic           : 'getAttrList',\n    userID          : msg.payload.userID,\n    payload         : [{$and : [{deviceType:msg.payload.deviceType}, {name:msg.payload.name}]}, projectionFilter],\n    prop            : msg.payload.prop,\n    name            : msg.payload.name,\n    deviceType      : msg.payload.deviceType,\n    trace           : msg.payload.trace\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 380,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "d206e66b.d73eb8",
        "type": "switch",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDeviceList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDeviceValues",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1090,
        "y": 380,
        "wires": [
            [
                "2b6693c7.697dbc"
            ],
            [
                "818972ac.61492"
            ],
            [
                "a73ef173.723ab"
            ],
            [
                "dfbf9465.6e7518"
            ]
        ]
    },
    {
        "id": "a73ef173.723ab",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse attrList",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nif (numDevices < 1) return null;\nvar attrListBig = msg.payload[0][msg.prop];\nvar attrList = [];\nvar attrCount = 0;\nfor (var ii = 0; ii < attrListBig.length; ++ii)\n{\n    if (attrListBig[ii].type == 'scalar')\n    {\n        attrList[attrCount] = attrListBig[ii].attr;\n        ++attrCount\n    }\n}\nif (attrCount < 1) return null;\nreturn {\n    topic:'getAttrList',\n    payload:{\n        topic           : 'getAttrList',\n        userID          : msg.userID,\n        prop            : msg.prop,\n        name            : msg.name,\n        deviceType      : msg.deviceType,\n        trace           : msg.trace,\n        attrList        : attrList\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 380,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "7b9e1c55.c445c4",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "javascript.specialscalar",
        "field": "payload.javascript.specialscalar",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var plotStarted = false;\n        var plotTraces = [];\n        var plotStartTime = 0;\n        var plotLength = 0;\n        var plotLayout = {};\n \n        function onDocumentReadySpecial()\n        {\n        }\n        function onWebSocketMessageSpecial(msg)\n        {\n        }\n        function loadDeviceValuesSpecial(data)\n        {\n            upDatePlot();\n        }\n        function clearAttrOptionListSpecial(itrace)\n        {\n        }\n        function attrSelectedSpecial(itrace)\n        {\n        }\n\n        function selectAxis(itrace,axis)\n        {\n            devInfo[itrace].axis  = axis;\n        }\n        function selectPts(itrace)\n        {\n            devInfo[itrace].pts = !devInfo[itrace].pts;\n        }\n        function startPlot()\n        {\n            if (!plotStarted)\n            {\n                $(\"#startPlotButton\").html('Stop Plot');\n            }\n            else\n            {\n                $(\"#startPlotButton\").html('Start Plot');\n            }\n            plotStarted = !plotStarted;\n            if (!plotStarted)\n            {\n                plotTraces = [];\n                for (var itrace = 0; itrace < numTraces; ++itrace)\n                {\n                    deviceSelect[itrace].disabled = false;\n                    nameSelect[itrace].disabled = false;\n                    propSelect[itrace].disabled = false;\n                    attrSelect[itrace].disabled = false;\n                    $('#plotAxis_' + itrace.toString() + 'y1').prop( \"disabled\", false );\n                    $('#plotAxis_' + itrace.toString() + 'y2').prop( \"disabled\", false );\n                    $('#pts_' + itrace.toString()).prop( \"disabled\", false );\n                }\n                return;\n            }\n            plotTraces = [];\n            \n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                deviceSelect[itrace].disabled = true;\n                nameSelect[itrace].disabled = true;\n                propSelect[itrace].disabled = true;\n                attrSelect[itrace].disabled = true;\n                $('#plotAxis_' + itrace.toString() + 'y1').prop( \"disabled\", true );\n                $('#plotAxis_' + itrace.toString() + 'y2').prop( \"disabled\", true );\n                $('#pts_' + itrace.toString()).prop( \"disabled\", true );\n                if (devInfo[itrace].name.length > 0)\n                {\n                    var modeType = 'lines';\n                    if (devInfo[itrace].pts) modeType = 'markers';\n                    var trace =  \n                    {\n                        x: [],\n                        y: [],\n                        name: devInfo[itrace].axis + ' ' + devInfo[itrace].deviceType + '.' + devInfo[itrace].name + '.' + devInfo[itrace].prop + '.' + devInfo[itrace].attr + ' (' + getAttrObject(devInfo[itrace].device,itrace).unit + ')',\n                        yaxis: devInfo[itrace].axis,\n                        type: 'scatter',\n                        mode: modeType\n                    };\n                    plotTraces.push(trace);\n                }\n            }\n            plotLayout =\n            {\n                showlegend: true,\n                legend: {x: 0,y: 1.35},\n                xaxis: {title: 'Time (seconds)'},\n                yaxis: {title: 'y1'},\n                yaxis2: {title: 'y2',overlaying: 'y',side: 'right'}\n            };\n\n            plotStartTime = new Date().getTime();\n            Plotly.newPlot('timePlot', plotTraces, plotLayout);\n            plotLength = Number($(\"#plotLength\").val());\n        }\n        function upDatePlot()\n        {\n            if (!plotStarted) return;\n            var now = (new Date().getTime() - plotStartTime) / 1000;\n            var plotBeginning = now - plotLength;\n            var traceCount = 0;\n            var deltaT = (new Date().getTime() - plotStartTime) / 1000;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].name.length > 0)\n                {\n                    var removeDone = false;\n                    while(!removeDone)\n                    {\n                        if (plotTraces[traceCount].x[0] < plotBeginning)\n                        {\n                            plotTraces[traceCount].x.shift();\n                            plotTraces[traceCount].y.shift();\n                        }\n                        else\n                        {\n                            removeDone = true;\n                        }\n                    }\n                    plotTraces[traceCount].x.push(deltaT);\n                    plotTraces[traceCount].y.push(getAttrObject(devInfo[itrace].device,itrace).value);\n                    ++traceCount;\n                }\n            }\n            Plotly.newPlot('timePlot', plotTraces, plotLayout);\n        }",
        "output": "str",
        "x": 330,
        "y": 40,
        "wires": [
            [
                "da88a362.516c9"
            ]
        ]
    },
    {
        "id": "5f5fabe8.9c0e04",
        "type": "mqtt in",
        "z": "e17f7487.2a78e8",
        "name": "readings",
        "topic": "$(ARCHIVETOPIC)",
        "qos": "0",
        "datatype": "auto",
        "broker": "84d80994.260508",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "a56beba4.f70678"
            ]
        ]
    },
    {
        "id": "a56beba4.f70678",
        "type": "json",
        "z": "e17f7487.2a78e8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 270,
        "y": 60,
        "wires": [
            [
                "88bd3e6.77514c"
            ]
        ]
    },
    {
        "id": "88bd3e6.77514c",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "check system clock sync and parse topic",
        "func": "if (!global.get('systemClockSynchronized')) return null;\nreturn {\n    topic   :msg.payload.name, \n    payload : \n    [\n        {\n            $and   :    \n            [\n                {\n                    deviceType : msg.payload.deviceType\n                },\n                {\n                    name : msg.payload.name\n                }\n            ]\n        }, \n        {\n            projection  :\n            {\n                _id :   0\n                \n            }\n        }\n    ],\n    'device'    :   msg.payload\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 60,
        "wires": [
            [
                "731fcbcd.96f0a4"
            ]
        ]
    },
    {
        "id": "72c58cab.a3c494",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Check Archive interval",
        "func": "msg.payload.readings = msg.device.readings;\nmsg.payload.settings = msg.device.settings;\nmsg.payload.timeStamp = new Date().getTime();\nmsg.payload.arcPeriod = msg.device.arcPeriod;\nvar archiveMsg = null;\nif ((msg.payload.timeStamp - msg.payload.lastArchive) > msg.payload.arcPeriod)\n{\n    msg.payload.lastArchive  = msg.payload.timeStamp;\n    msg.device.lastArchive = msg.payload.lastArchive;\n    msg.device.timeStamp = msg.payload.timeStamp;\n    var archiveDevice = JSON.parse(JSON.stringify(msg.device));\n    delete archiveDevice.arcPeriod;\n    delete archiveDevice.lastArchive;\n    for (var ii = 0; ii < archiveDevice.readings.length; ++ii)\n    {\n        if (archiveDevice.readings[ii].type == 'scalar')\n        {\n            delete archiveDevice.readings[ii].unit;\n            delete archiveDevice.readings[ii].alarm;\n        }\n        delete archiveDevice.readings[ii].type;\n    }\n    for (var ii = 0; ii < archiveDevice.settings.length; ++ii)\n    {\n        if (archiveDevice.settings[ii].type == 'scalar')\n        {\n            delete archiveDevice.settings[ii].unit;\n            delete archiveDevice.settings[ii].alarm;\n        }\n        delete archiveDevice.settings[ii].type;\n    }\n    archiveMsg = {topic:'archiveData',payload: archiveDevice};\n}\nvar updateDeviceMsg = \n{\n    topic:'updateDevice',\n    payload:\n    [\n        {\n            $and   :    \n            [\n                {\n                    deviceType : msg.payload.deviceType\n                },\n                {\n                    name : msg.payload.name\n                }\n            ]\n        }, \n        msg.payload\n    ]\n};\nreturn [updateDeviceMsg,archiveMsg];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 1060,
        "y": 120,
        "wires": [
            [
                "bc2507b7.46f4b8"
            ],
            [
                "621ab8d1.42e078"
            ]
        ]
    },
    {
        "id": "662fe630.391fd8",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Scalar Plotter",
        "output": "str",
        "x": 730,
        "y": 40,
        "wires": [
            [
                "b6d95279.1b494"
            ]
        ]
    },
    {
        "id": "8a439be9.030ab8",
        "type": "subflow:ca529822.9112f8",
        "z": "f22a539a.a67b3",
        "name": "",
        "x": 490,
        "y": 80,
        "wires": []
    },
    {
        "id": "e020461d.044ee8",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Check if Device Exists",
        "func": "function isEmpty(obj) \n{\n    for(var key in obj) \n    {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\nif (isEmpty(msg.payload)) return null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 120,
        "wires": [
            [
                "72c58cab.a3c494"
            ]
        ]
    },
    {
        "id": "731fcbcd.96f0a4",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "findOne",
        "x": 810,
        "y": 60,
        "wires": [
            [
                "e020461d.044ee8"
            ]
        ]
    },
    {
        "id": "bc2507b7.46f4b8",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "update",
        "x": 1330,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "621ab8d1.42e078",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "insertOne",
        "x": 1340,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "699dce99.1fe68",
        "type": "mongodb3 in",
        "z": "dc20c6e0.0feb98",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "find.toArray",
        "x": 890,
        "y": 380,
        "wires": [
            [
                "d206e66b.d73eb8"
            ]
        ]
    },
    {
        "id": "8e79cfec.1347",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getDeviceValues",
        "func": "var projectionFilter =  {projection:{_id:0}};\nvar newMsg = \n{\n    topic           : 'getDeviceValues',\n    userID          : msg.payload.userID,\n    payload         : [msg.payload.queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 420,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "dfbf9465.6e7518",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse getDeviceValues",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nif (numDevices < 1) return null;\nvar devices = [];\nfor (var idev = 0; idev < numDevices; ++idev) devices[idev] = msg.payload[idev];\nreturn {\n    topic:'getDeviceValues',\n    payload:{\n        topic           : 'getDeviceValues',\n        userID          : msg.userID,\n        devices         : devices,\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 420,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "68b75168.59f04",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarArchivePlotter",
        "url": "/scalarArchivePlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "3662caf5.96ce96"
            ]
        ]
    },
    {
        "id": "2857fd6b.987de2",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Prop</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n                <td width=\"8%\" align=\"center\"><span class=\"tableHeading \">value</span></td>\n                <td width=\"7%\" align=\"center\"><span class=\"tableHeading \">unit</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">y1</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">y2</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">pt</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv0' href='' target='_blank' download=\"data0.csv\" class=\"csv-linked\">1</a>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"propSelect0\" onchange=\"propSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText \" id=\"valueSelect0\"></span></td>\n                <td align=\"center\"><span class=\"tableText \" id=\"unitSelect0\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_0y1\" type=\"radio\" name=\"plotAxis_0\"  value=\"y1\"  onchange='selectAxis(0,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_0y2\" type=\"radio\" name=\"plotAxis_0\"  value=\"y2\"  onchange='selectAxis(0,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_0\" type=\"checkbox\" name=\"pts_0\"  value=\"pts\"  onchange='selectPts(0)'></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv1' href='' target='_blank' download=\"data1.csv\" class=\"csv-linked\">2</a>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect1\" onchange=\"deviceSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect1\" onchange=\"nameSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect1\" onchange=\"propSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect1\" onchange=\"attrSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect1\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect1\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_1y1\" type=\"radio\" name=\"plotAxis_1\"  value=\"y1\"  onchange='selectAxis(1,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_1y2\" type=\"radio\" name=\"plotAxis_1\"  value=\"y2\"  onchange='selectAxis(1,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_1\" type=\"checkbox\" name=\"pts_1\"  value=\"pts\"  onchange='selectPts(1)'></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv2' href='' target='_blank' download=\"data2.csv\" class=\"csv-linked\">3</a>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect2\" onchange=\"deviceSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect2\" onchange=\"nameSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect2\" onchange=\"propSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect2\" onchange=\"attrSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect2\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect2\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_2y1\" type=\"radio\" name=\"plotAxis_2\"  value=\"y1\"  onchange='selectAxis(2,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_2y2\" type=\"radio\" name=\"plotAxis_2\"  value=\"y2\"  onchange='selectAxis(2,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_2\" type=\"checkbox\" name=\"pts_2\"  value=\"pts\"  onchange='selectPts(2)'></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv3' href='' target='_blank' download=\"data3.csv\" class=\"csv-linked\">4</a>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect3\" onchange=\"deviceSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect3\" onchange=\"nameSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect3\" onchange=\"propSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect3\" onchange=\"attrSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect3\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect3\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_3y1\" type=\"radio\" name=\"plotAxis_3\"  value=\"y1\"  onchange='selectAxis(3,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_3y2\" type=\"radio\" name=\"plotAxis_3\"  value=\"y2\"  onchange='selectAxis(3,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_3\" type=\"checkbox\" name=\"pts_3\"  value=\"pts\"  onchange='selectPts(3)'></td>\n            </tr>\n        </table>\n    </div>\n    <div id='plotSetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td width=10% align=\"center\" class=\"tableHeading\">Max Plot Pts</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Start</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Stop</td>\n                        <td width=10% align=\"center\"></td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"maxPtsToPlot\" type=\"text\" value=\"500\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getArchiveData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n       </div>\n        <div class='row'>\n            <div class='col-md-12'>\n                <div class='card' id=\"timePlotCard\" >\n                    <p class='card-title'>Time Plot</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"timePlot\" width=\"100%\" class=\"plot\"></div> \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 850,
        "y": 100,
        "wires": [
            [
                "bb160287.a4943"
            ]
        ]
    },
    {
        "id": "3662caf5.96ce96",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "javascript.specialscalar",
        "field": "payload.javascript.specialscalar",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var startDate = 0;\n        var stopDate = 0;\n        var csvFile = [];\n        var archiveRequestList = [];\n        var archiveList = [];\n\n        function onDocumentReadySpecial()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n                csvFile[itrace] = null;\n\n            }\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n            $('#timePlotCard').hide();\n        }\n        function onWebSocketMessageSpecial(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'getArchiveValues':\n                    archiveList.push(msg.payload);\n                    if (archiveRequestList.length > 0)\n                    {\n                        getArchiveValues();\n                    }\n                    else\n                    {\n                        loadArchiveValues();\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n        function loadDeviceValuesSpecial(data)\n        {\n        }\n        function clearAttrOptionListSpecial(itrace)\n        {\n            $('#csv'+ itrace.toString()).removeAttr(\"href\");\n            $('#csv'+ itrace.toString()).css('color', 'black');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n       }\n        function attrSelectedSpecial(itrace)\n        {\n            $('#csv'+ itrace.toString()).removeAttr(\"href\");\n            $('#csv'+ itrace.toString()).css('color', 'black');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n        }\n        function selectAxis(itrace,axis)\n        {\n            devInfo[itrace].axis  = axis;\n        }\n        function selectPts(itrace)\n        {\n            devInfo[itrace].pts = !devInfo[itrace].pts;\n        }\n        function getArchiveData()\n        {\n            archiveRequestList = [];\n            archiveList = [];\n            startDate = new Date($( \"#startDate\" ).val()).getTime();\n            stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].name.length > 0) \n                {\n                    archiveRequestList[traceCount] = \n                    {\n                        deviceType  : devInfo[itrace].deviceType, \n                        name        : devInfo[itrace].name, \n                        prop        : devInfo[itrace].prop, \n                        attr        : devInfo[itrace].attr,\n                        startDate   : startDate, \n                        stopDate    : stopDate,\n                        itrace      : itrace\n                    };\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            $('#plotSetupTable').hide();\n            $('#timePlotCard').hide();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            }\n            messageDialog('Alert', 'Wait!', 'Requesting data ...');\n            getArchiveValues();\n\n        }\n        function getArchiveValues()\n        {\n            var maxPtsToPlot = Number($( \"#maxPtsToPlot\" ).val());\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getArchiveValues',\n                    userID      : userID,\n                    device      : archiveRequestList[0],\n                    maxPtsToPlot: maxPtsToPlot\n                });\n            archiveRequestList.shift();\n            return;\n        }\n        function loadArchiveValues()\n        {\n            $( \"#messageDialog\" ).dialog('close');\n            $('#plotSetupTable').show();\n            var plotTraces = [];\n            for (ii = 0; ii < archiveList.length; ++ii)\n            {\n                itrace = archiveList[ii].itrace;\n                var modeType = 'lines';\n                if (devInfo[itrace].pts) modeType = 'markers';\n                var trace =  \n                {\n                    x: [],\n                    y: [],\n                    name: devInfo[itrace].axis + ' ' + devInfo[itrace].deviceType + '.' + devInfo[itrace].name + '.' + devInfo[itrace].prop + '.' + devInfo[itrace].attr + ' (' + getAttrObject(devInfo[itrace].device, itrace).unit + ')',\n                    yaxis: devInfo[itrace].axis,\n                    type: 'scatter',\n                    mode: modeType\n                }\n                for (var ipt = 0; ipt < archiveList[ii].trace.length; ++ipt)\n                {\n                    trace.x[ipt] = (archiveList[ii].trace[ipt].timeStamp - startDate) / 3600000;\n                    trace.y[ipt] = archiveList[ii].trace[ipt].value;\n                }\n                plotTraces.push(trace);\n                makeCsvFile(ii);\n            }\n            var plotLayout =\n            {\n                showlegend: true,\n                legend: {x: 0,y: 1.35},\n                xaxis: {title: 'Hours  since '  + new Date(startDate).toLocaleString()},\n                yaxis: {title: 'y1'},\n                yaxis2: {title: 'y2',overlaying: 'y',side: 'right'}\n            };\n            $('#timePlotCard').show();\n            Plotly.newPlot('timePlot', plotTraces, plotLayout);\n        }\n        function makeCsvFile(ii)\n        {\n            var dataString = '';\n            var startT = archiveList[ii].trace[0].timeStamp;\n            var itrace = archiveList[ii].itrace;\n        \n            dataString = dataString + 'Device,' + devInfo[itrace].deviceType + ',' + devInfo[itrace].name + ',' + devInfo[itrace].prop + ',' + devInfo[itrace].attr  +'\\n';\n            dataString = dataString + 'StartDate,' + new Date(startT).toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}) + '\\n';\n            dataString = dataString + 'StartDate (mS),' + startT.toString() + '\\n';\n            dataString = dataString + 'Time (sec), Value (' + devInfo[itrace].unit + ')\\n';\n            for (var ipt = 0; ipt < archiveList[ii].trace.length; ++ipt)\n            {\n                var x = (archiveList[ii].trace[ipt].timeStamp - startT) / 1000;\n                var y = archiveList[ii].trace[ipt].value;\n                dataString = dataString + x.toString() + ',' + y.toString() + '\\n';\n            }\n            var data = new Blob([dataString], {type: 'text/plain'});\n        \n            // If we are replacing a previously generated file we need to\n            // manually revoke the object URL to avoid memory leaks.\n            if (csvFile[itrace] !== null) {\n              window.URL.revokeObjectURL(csvFile[itrace]);\n            }\n        \n            csvFile[itrace] = window.URL.createObjectURL(data);\n            // returns a URL you can use as a href\n            $('#csv'+ itrace.toString()).css('color', 'blue');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'underline');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            $('#csv'+ itrace.toString()).attr(\"href\", csvFile[itrace]);\n            $('#csv'+ itrace.toString()).attr(\"download\", devInfo[itrace].deviceType + '-' + devInfo[itrace].name + '-' + devInfo[itrace].prop + '-' + devInfo[itrace].attr + '.csv');\n        \n        }\n",
        "output": "str",
        "x": 330,
        "y": 100,
        "wires": [
            [
                "7d3145f.8eb39bc"
            ]
        ]
    },
    {
        "id": "c767ad27.32df7",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Scalar Archive Plotter",
        "output": "str",
        "x": 730,
        "y": 100,
        "wires": [
            [
                "2857fd6b.987de2"
            ]
        ]
    },
    {
        "id": "e4e0d070.30842",
        "type": "websocket in",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarArchivePlotter",
        "server": "3c1c519e.83272e",
        "client": "",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "5ddca0da.79e6e"
            ]
        ]
    },
    {
        "id": "2672654d.766b0a",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarArchivePlotter",
        "server": "3c1c519e.83272e",
        "client": "",
        "x": 1660,
        "y": 360,
        "wires": []
    },
    {
        "id": "1f6a9f15.3d80c1",
        "type": "link out",
        "z": "dc20c6e0.0feb98",
        "name": "Scalar DB Info",
        "links": [
            "23adba5a.1575e6"
        ],
        "x": 1415,
        "y": 360,
        "wires": []
    },
    {
        "id": "23adba5a.1575e6",
        "type": "link in",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "links": [
            "1f6a9f15.3d80c1",
            "7ed83a34.453664"
        ],
        "x": 1495,
        "y": 360,
        "wires": [
            [
                "472ae883.652f08",
                "2672654d.766b0a",
                "3b8105e.0ce10fa"
            ]
        ]
    },
    {
        "id": "98c9d4ad.3f54f8",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getArchiveValues",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n        deviceType                  :   1,  \n        name                        :   1,  \n        timeStamp                   :   1, \n        [msg.payload.device.prop]   : \n        {\n            $elemMatch  : \n            {   \n                attr    : msg.payload.device.attr \n            }\n        } \n    } \n};\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            deviceType: msg.payload.device.deviceType\n        },\n        {\n            name: msg.payload.device.name\n        },\n        {\n            timeStamp :\n            {\n                $gte: msg.payload.device.startDate,\n                $lte: msg.payload.device.stopDate\n            }\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : 'getArchiveValues',\n    userID          : msg.payload.userID,\n    payload         : [queryFilter, projectionFilter],\n    device          : msg.payload.device,\n    maxPtsToPlot    : msg.payload.maxPtsToPlot,\n    itrace          : msg.payload.device.itrace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 460,
        "wires": [
            [
                "c83b72f2.fbac"
            ]
        ]
    },
    {
        "id": "c83b72f2.fbac",
        "type": "mongodb3 in",
        "z": "dc20c6e0.0feb98",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 890,
        "y": 460,
        "wires": [
            [
                "91696018.4cd47"
            ]
        ]
    },
    {
        "id": "91696018.4cd47",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic:'getArchiveValues',\n        payload:{\n            topic           : 'getArchiveValues',\n            payload         : {itrace: msg.itrace, trace:null},\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\nvar trace = [];\nvar maxPts = msg.maxPtsToPlot;\nvar nstep = numRecords / msg.maxPtsToPlot;\nif (nstep < 1.0) \n{\n    nstep = 1.0;\n    maxPts = numRecords;\n}\nvar icnt = 0;\n\nwhile(icnt < maxPts)\n{\n    var index = Math.round(icnt * nstep);\n    trace[icnt] = {timeStamp: records[index].timeStamp, value: records[index][msg.device.prop][0].value};\n    ++icnt\n}\n\nreturn {\n    topic:'getArchiveValues',\n    payload:{\n        topic           : 'getArchiveValues',\n        payload         : {itrace: msg.itrace, trace:trace},\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 460,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "101f39eb.3dbc86",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarViewer",
        "url": "/scalarViewer",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 160,
        "wires": [
            [
                "fa0c0cab.d9876"
            ]
        ]
    },
    {
        "id": "98ef08d2.acd658",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"9%\"  align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Prop</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">value</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">unit</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Edit</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">1</span></td>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"propSelect0\" onchange=\"propSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText \" id=\"valueSelect0\"></span></td>\n                <td align=\"center\"><span class=\"tableText \" id=\"unitSelect0\"></span></td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"editDeviceButton0\" type=\"button\" onclick=\"editDevice(0)\">Edit</button>\n                </td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">2</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect1\" onchange=\"deviceSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect1\" onchange=\"nameSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect1\" onchange=\"propSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect1\" onchange=\"attrSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect1\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect1\"></span></td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"editDeviceButton1\" type=\"button\" onclick=\"editDevice(1)\">Edit</button>\n                </td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">3</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect2\" onchange=\"deviceSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect2\" onchange=\"nameSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect2\" onchange=\"propSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect2\" onchange=\"attrSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect2\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect2\"></span></td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"editDeviceButton2\" type=\"button\" onclick=\"editDevice(2)\">Edit</button>\n                </td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">4</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect3\" onchange=\"deviceSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect3\" onchange=\"nameSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect3\" onchange=\"propSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect3\" onchange=\"attrSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect3\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect3\"></span></td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"editDeviceButton3\" type=\"button\" onclick=\"editDevice(3)\">Edit</button>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n        <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n        <div class='card-body'>\n            <table>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">Value</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"attrValue\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">LoLo</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">LOW</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">HIGH</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">HiHi</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">Notify Name</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">Notify Number</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                </tr>\n            </table>\n        </div>\n    </div>",
        "output": "str",
        "x": 850,
        "y": 160,
        "wires": [
            [
                "bc45cf67.b90c6"
            ]
        ]
    },
    {
        "id": "ddfc02aa.3af39",
        "type": "template",
        "z": "df70f6f.9e4ed08",
        "name": "javascript.scalardevicemenu",
        "field": "payload.javascript.scalardevicemenu",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var numTraces = 4;\n        var deviceSelect = [];\n        var nameSelect = [];\n        var propSelect=[];\n        var attrSelect=[];\n        var valSelect=[];\n        var devInfo = [];\n        var permitGetDeviceValues = true;\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                deviceSelect[itrace] = document.getElementById('deviceSelect' + itrace.toString());\n                nameSelect[itrace] = document.getElementById('nameSelect' + itrace.toString());\n                propSelect[itrace] = document.getElementById('propSelect' + itrace.toString());\n                attrSelect[itrace] = document.getElementById('attrSelect' + itrace.toString());\n                valSelect[itrace] = document.getElementById('valSelect' + itrace.toString());\n                devInfo[itrace] = {deviceType: '', name : '',  prop : '',attr : '',device : {}, axis:'y1', pts:false};\n                $('#unitSelect'+ itrace.toString()).html('');\n            }\n            setInterval(getDeviceValues, 1000);\n            onDocumentReadySpecial();\n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getDeviceList':\n                        loadDeviceList(msg.payload);\n                        break;\n                    case 'getNameList':\n                        loadNameList(msg);\n                        break;\n                    case 'getAttrList':\n                        loadAttrList(msg);\n                        break;\n                    case 'getDeviceValues':\n                        loadDeviceValues(msg);\n                        break;\n                    default:\n                        onWebSocketMessageSpecial(msg);\n                }\n            }\n         }\n        function onWebSocketOpen()\n        {\n            sendWebSocketMessageObject({topic : 'getDeviceList',payload : {}, 'userID' : userID,});\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function loadDeviceList(deviceList)\n        {\n            deviceList.sort();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                for (var ii = 0; ii < deviceList.length; ++ii)\n                {\n                    var opt = document.createElement('option');\n                    opt.value = deviceList[ii];\n                    opt.innerHTML = deviceList[ii];\n                    deviceSelect[itrace].appendChild(opt);\n                }\n            }\n        }\n        function loadNameList(data)\n        {\n            data.nameList.sort();\n            for (var ii = 0; ii < data.nameList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.nameList[ii];\n                opt.innerHTML = data.nameList[ii];\n                nameSelect[data.trace].appendChild(opt);\n            }\n\n            return;\n        }\n        function loadAttrList(data)\n        {\n            data.attrList.sort();\n            for (var ii = 0; ii < data.attrList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.attrList[ii];\n                opt.innerHTML = data.attrList[ii];\n                attrSelect[data.trace].appendChild(opt);\n            }\n        }\n        function deviceSelected(itrace)\n        {\n            clearNameOptionList(itrace);\n            if (deviceSelect[itrace].value == 'notSelected') return;\n            nameSelect[itrace].value = 'notSelected';\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getNameList',\n                    userID      : userID,\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                });\n        }\n        function nameSelected(itrace)\n        {\n            clearPropOptionList(itrace);\n            if (nameSelect[itrace].value == 'notSelected') return;\n            var readOpt = document.createElement('option');\n            readOpt.value = 'readings';\n            readOpt.innerHTML = 'readings';\n            propSelect[itrace].appendChild(readOpt);\n            var setOpt = document.createElement('option');\n            setOpt.value = 'settings';\n            setOpt.innerHTML = 'settings';\n            propSelect[itrace].appendChild(setOpt);\n            \n            propSelect[itrace].value = 'notSelected';\n        }\n        function propSelected(itrace)\n        {\n            clearAttrOptionList(itrace);\n            if (propSelect[itrace].value == 'notSelected') return;\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getAttrList',\n                    userID      : userID,\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                    name        : nameSelect[itrace].value,\n                    prop        : propSelect[itrace].value\n                });\n        }\n        function attrSelected(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n            if (attrSelect[itrace].value == 'notSelected') \n            {\n                $('#valueSelect' + itrace.toString()).html('');\n                $('#unitSelect' + itrace.toString()).html('');\n                $('#editDeviceButton'+ itrace.toString()).hide();\n\n                return;\n            }\n            devInfo[itrace].deviceType = deviceSelect[itrace].value;\n            devInfo[itrace].name = nameSelect[itrace].value;\n            devInfo[itrace].prop = propSelect[itrace].value;\n            devInfo[itrace].attr = attrSelect[itrace].value;\n            attrSelectedSpecial(itrace);\n\n        }\n        function clearNameOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (nameSelect[itrace].firstChild)\n            {\n                nameSelect[itrace].removeChild(nameSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            nameSelect[itrace].appendChild(opt);\n            clearPropOptionList(itrace);\n        }\n        function clearPropOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (propSelect[itrace].firstChild)\n            {\n                propSelect[itrace].removeChild(propSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            propSelect[itrace].appendChild(opt);\n            clearAttrOptionList(itrace);\n        }\n        function clearAttrOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (attrSelect[itrace].firstChild)\n            {\n                attrSelect[itrace].removeChild(attrSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            attrSelect[itrace].appendChild(opt);\n            $('#unitSelect'+ itrace.toString()).html('');\n            $('#valueSelect' + itrace.toString()).html('');\n            clearAttrOptionListSpecial(itrace);\n        }\n        function getDeviceValues()\n        {\n            var devList = [];\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if ((devInfo[itrace].deviceType.length > 0) && (devInfo[itrace].name.length > 0)) \n                {\n                    devList[traceCount] = { $and: [ {deviceType : devInfo[itrace].deviceType}, {name : devInfo[itrace].name}]};\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            var queryFilter = { $or: devList };\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getDeviceValues',\n                    userID      : userID,\n                    queryFilter : queryFilter,\n                });\n \n        }\n        function loadDeviceValues(data)\n        {\n            if (!permitGetDeviceValues) return;\n            var devices = data.devices;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].attr.length > 0)\n                {\n                    for (idev = 0; idev < devices.length; ++idev)\n                    {\n                        if (devices[idev].deviceType == devInfo[itrace].deviceType)\n                        {\n                            if(devices[idev].name == devInfo[itrace].name)\n                            {\n                                devInfo[itrace].device = devices[idev];\n                                var attr = getAttrObject(devInfo[itrace].device, itrace);\n                                var valueColor = 'black';\n                                if (attr.alarm.value > 0) valueColor = 'orange';\n                                if (attr.alarm.value > 2) valueColor = 'red';\n                                $('#valueSelect' + itrace.toString()).css(\"color\", valueColor);\n                                $('#valueSelect' + itrace.toString()).html(attr.value.toString());\n                                $('#unitSelect' + itrace.toString()).css(\"color\", valueColor);\n                                $('#unitSelect' + itrace.toString()).html(attr.unit);\n                            }\n                        }\n                    } \n                }\n            }\n            loadDeviceValuesSpecial(data);\n        }\n        function getAttrObject(device, itrace)\n        {\n            var props = device[devInfo[itrace].prop];\n            var attr = props.find(attr => attr.attr === devInfo[itrace].attr);\n            return attr;\n        }\n",
        "output": "str",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "e98d4d33.bcca2"
            ]
        ]
    },
    {
        "id": "64bfcc43.f50934",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Scalar Viewer",
        "output": "str",
        "x": 730,
        "y": 160,
        "wires": [
            [
                "98ef08d2.acd658"
            ]
        ]
    },
    {
        "id": "3b8105e.0ce10fa",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarViewer",
        "server": "3d5cd97c.77df96",
        "client": "",
        "x": 1630,
        "y": 420,
        "wires": []
    },
    {
        "id": "c885dc27.153e5",
        "type": "websocket in",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarViewer",
        "server": "3d5cd97c.77df96",
        "client": "",
        "x": 110,
        "y": 440,
        "wires": [
            [
                "5ddca0da.79e6e"
            ]
        ]
    },
    {
        "id": "acb98a7f.ed2778",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Create ultra-ncab Database entry",
        "func": "var device = \n{\n    name        : '001',\n    deviceType  : 'ultra-ncab',\n    arcPeriod   : 60000,\n    timeStamp   : 0,\n    lastArchive : 0,\n    readings    : \n    [ \n        { attr : 'maxAmp',      type : 'scalar',    value : 0,  unit : 'um',    alarm : {value : 0, limits: {lolo : 0.0,    low : 10.0,   high : 800.0,      hihi : 1000.0  }, notify:{name:'', number:'', time:0} } },\n        { attr : 'maxAmpMode',  type : 'scalar',    value : 0,  unit : 'Hz',    alarm : {value : 0, limits: {lolo : 0.3,    low : 0.5,    high : 85.0,       hihi : 88.0    }, notify:{name:'', number:'', time:0} } },\n        { attr : 'avgPower',    type : 'scalar',    value : 0,  unit : 'um',    alarm : {value : 0, limits: {lolo : 0.0,    low : 10,     high : 1000,       hihi : 100     }, notify:{name:'', number:'', time:0} } },\n        { attr : 'linkQuality', type : 'scalar',    value : 0,  unit : '/70',   alarm : {value : 0, limits: {lolo :  30,    low : 40,     high : 71,         hihi : 80      }, notify:{name:'', number:'', time:0} } },\n        { attr : 'signalLevel', type : 'scalar',    value : 0,  unit : 'dBm',   alarm : {value : 0, limits: {lolo : -70,    low : -60,    high : 0,          hihi : 30      }, notify:{name:'', number:'', time:0} } },\n        { attr : 'spectrum',    type : 'vector',    value : [[], []]   },\n        { attr : 'timeTrace',   type : 'vector',    value : [[], []]   }\n    ],\n    settings    :\n    [ \n        { attr : 'minDisplayMode',   type : 'scalar',    value : 0.5, unit : 'Hz',    alarm : {value : 0, limits: {lolo : 0.3,      low : 0.6,     high : 85,      hihi : 88   }, notify:{name:'', number:'', time:0} } },\n        { attr : 'maxDisplayMode',   type : 'scalar',    value : 80,  unit : 'Hz',    alarm : {value : 0, limits: {lolo : 0.3,      low : 0.6,     high : 85,      hihi : 88   }, notify:{name:'', number:'', time:0} } },\n        { attr : 'averages',         type : 'scalar',    value : 10,  unit : 'unit',  alarm : {value : 0, limits: {lolo : 1,        low : 1,       high : 20,      hihi : 100  }, notify:{name:'', number:'', time:0} } }\n    ]\n};\nreturn {topic:'demoEntry',payload:device};",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 900,
        "wires": [
            [
                "194e0a53.8d5cd6"
            ]
        ]
    },
    {
        "id": "194e0a53.8d5cd6",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "insertOne",
        "x": 720,
        "y": 900,
        "wires": [
            [
                "9360ca4d.9ac068"
            ]
        ]
    },
    {
        "id": "9360ca4d.9ac068",
        "type": "debug",
        "z": "e17f7487.2a78e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 970,
        "y": 900,
        "wires": []
    },
    {
        "id": "ccf8928d.df36b",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 900,
        "wires": [
            [
                "acb98a7f.ed2778"
            ]
        ]
    },
    {
        "id": "5d93334c.7b160c",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "projectName",
        "topic": "projectName",
        "payload": "PROJECT",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 130,
        "y": 160,
        "wires": [
            [
                "e06b15ee.c3bf78"
            ]
        ]
    },
    {
        "id": "e06b15ee.c3bf78",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Save Project Name",
        "func": "global.set(msg.topic,msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "4819746c.65db8c",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "sendSettingToMqtt",
        "func": "return {\n    topic   : msg.payload.mqttMessage.topic, \n    payload : msg.payload.mqttMessage.payload, \n    token   : msg.payload.token, \n    userID  : msg.payload.userID };\n",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 500,
        "wires": [
            [
                "10ada662.0629da"
            ]
        ]
    },
    {
        "id": "6381975d.b98928",
        "type": "mqtt out",
        "z": "dc20c6e0.0feb98",
        "name": "Publish setting",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "84d80994.260508",
        "x": 1300,
        "y": 500,
        "wires": []
    },
    {
        "id": "482179b1.0efb28",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarAlarmScanner",
        "url": "/scalarAlarmScanner",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "30fbb3de.45ba1c"
            ]
        ]
    },
    {
        "id": "9661ff85.f96c8",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class=\"row\"> \n            <div class=\"col-md-3\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\"></div>\n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"toggleSoundButton\" type=\"button\" onclick=\"toggleSound()\">Turn Sound On</button>\n            </div>\n            <div class=\"col-md-3\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\"></div>\n        </div>\n    </div>\n    <div width=\"100%\">\n        <table width=\"100%\" id='alarmTable'>\n            <tr class=\"tableHeading\">\n                <td width='12%'>Alarm</td>\n                <td width='12%'>Device</td>\n                <td width='12%'>Name</td>\n                <td width='12%'>Property</td>\n                <td width='12%'>Attribute</td>\n                <td width='12%'>Value</td>\n                <td width='12%'>Unit</td>\n                <td width='12%'>Type</td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 610,
        "y": 220,
        "wires": [
            [
                "f07664a9.ede108"
            ]
        ]
    },
    {
        "id": "30fbb3de.45ba1c",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var retries = 0;\n        var userID = -1;\n        var audioAlarm = new Audio('/audio/alarm.ogg');\n        var alarmSoundOn = false;\n        var soundLastPlayed = 0;\n        var soundInterval = 4000;\n        \n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            createAlarmTableRows(100);\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n               case 'alarmList':\n                    alarmScan(msg.payload);\n                    break;\n                default:\n                // code block\n            }\n        }\n        function createAlarmTableRows(nrows)\n        {\n            var alarmTable = document.getElementById('alarmTable');\n            for (var irow = 0; irow < nrows; ++irow)\n            {\n                var row = alarmTable.insertRow(irow + 1);\n                row.setAttribute(\"id\", \"alarmTable\" + irow.toString());\n                row.setAttribute(\"class\", \"tableText\");\n                var iconCell = row.insertCell(0);\n                var devCell  = row.insertCell(1);\n                var nameCell = row.insertCell(2);\n                var propCell = row.insertCell(3);\n                var attrCell = row.insertCell(4);\n                var valueCell= row.insertCell(5);\n                var unitCell = row.insertCell(6);\n                var typeCell = row.insertCell(7);\n                iconCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_icon\");\n                devCell.setAttribute( \"id\", \"alarmTable\" + irow.toString() + \"_dev\");\n                nameCell.setAttribute( \"id\", \"alarmTable\" + irow.toString() + \"_name\");\n                propCell.setAttribute( \"id\", \"alarmTable\" + irow.toString() + \"_prop\");\n                attrCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_attr\");\n                valueCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_value\");\n                unitCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_unit\");\n                typeCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_type\");\n                $('#alarmTable' + irow.toString()).hide();\n                iconCell.innerHTML = \"<img id='alarmTable\" + irow.toString() + \"_led'\" + \" src='/img/redLight.png' height='50px'/>\";\n            }\n        \n        }\n        function alarmScan(alarmList)\n        {\n            var deviceInfo = [];\n            var nrows = $('#alarmTable tr').length;\n            nrows = nrows - 1;\n            if (alarmList.length > nrows) alert('Too many alarms to display!');\n            for (var idev = 0; idev < alarmList.length; ++idev)\n            {\n                $('#alarmTable' + idev.toString()).show();\n                $('#alarmTable' + idev.toString() + '_dev').html(alarmList[idev].deviceType);\n                $('#alarmTable' + idev.toString() + '_name').html(alarmList[idev].name);\n                $('#alarmTable' + idev.toString() + '_prop').html(alarmList[idev].prop);\n                $('#alarmTable' + idev.toString() + '_attr').html(alarmList[idev].attr);\n                $('#alarmTable' + idev.toString() + '_value').html(alarmList[idev].value);\n                $('#alarmTable' + idev.toString() + '_unit').html(alarmList[idev].unit);\n                var type = '';\n                if (alarmList[idev].alarm == 1) type = 'LOW';\n                if (alarmList[idev].alarm == 2) type = 'HIGH';\n                if (alarmList[idev].alarm == 3) type = 'LOLO';\n                if (alarmList[idev].alarm == 4) type = 'HIHI';\n                $('#alarmTable' + idev.toString() + '_type').html(type);\n                if (alarmList[idev].alarm < 3)\n                {\n                    $('#alarmTable' + idev.toString() + '_led').attr('src','/img/yellowLight.png');\n                }\n                else\n                {\n                    $('#alarmTable' + idev.toString() + '_led').attr('src','/img/redLight.png');\n                    if (alarmSoundOn)\n                    {\n                        if ((new Date().getTime() - soundLastPlayed) > soundInterval)\n                        {\n                            audioAlarm.play();\n                            soundLastPlayed = new Date().getTime();\n                        }\n                    }\n                    \n                }\n        \n            }\n            for (var idev = alarmList.length; idev < nrows; ++idev)\n            {\n                $('#alarmTable' + idev.toString()).hide();\n            }\n        \n        }\n        function toggleSound()\n        {\n            alarmSoundOn = !alarmSoundOn;\n            var soundButtonText = 'Turn Sound On';\n            if (alarmSoundOn) soundButtonText = 'Turn Sound Off';\n            $('#toggleSoundButton').html(soundButtonText);\n        }",
        "output": "str",
        "x": 350,
        "y": 220,
        "wires": [
            [
                "f98b12be.28903"
            ]
        ]
    },
    {
        "id": "f98b12be.28903",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Alarm Scanner",
        "output": "str",
        "x": 490,
        "y": 220,
        "wires": [
            [
                "9661ff85.f96c8"
            ]
        ]
    },
    {
        "id": "8923ffe3.37bda",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarAlarmScanner",
        "server": "2b65833e.87911c",
        "client": "",
        "x": 800,
        "y": 740,
        "wires": []
    },
    {
        "id": "60f8d457.92c10c",
        "type": "mongodb3 in",
        "z": "dc20c6e0.0feb98",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "find.toArray",
        "x": 370,
        "y": 740,
        "wires": [
            [
                "902a8791.29d718"
            ]
        ]
    },
    {
        "id": "6eaf67b8.ba2648",
        "type": "inject",
        "z": "dc20c6e0.0feb98",
        "name": "Every 10 sec",
        "topic": "",
        "payload": "'name'",
        "payloadType": "str",
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 740,
        "wires": [
            [
                "60f8d457.92c10c"
            ]
        ]
    },
    {
        "id": "902a8791.29d718",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Scan for alarms",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar oldAlarmList = context.get('oldAlarmList')\nif (oldAlarmList == undefined) oldAlarmList = [];\nvar numDevices = objectLength(msg.payload);\nvar props = ['readings', 'settings'];\nvar alarmList = [];\nvar alarmCount = 0;\nfor (var idev = 0; idev < numDevices; ++idev)\n{\n    for (var iprop = 0; iprop < 2; ++iprop)\n    {\n        for (var iattr = 0; iattr < msg.payload[idev][props[iprop]].length; ++iattr)\n        {\n            if (msg.payload[idev][props[iprop]][iattr].type == 'scalar')\n            {\n                if (msg.payload[idev][props[iprop]][iattr].alarm.value > 0)\n                {\n                    alarmList[alarmCount] = \n                    {\n                        deviceType: msg.payload[idev].deviceType,\n                        name  : msg.payload[idev].name,\n                        prop  : props[iprop],\n                        attr  : msg.payload[idev][props[iprop]][iattr].attr,\n                        value : msg.payload[idev][props[iprop]][iattr].value,\n                        unit  : msg.payload[idev][props[iprop]][iattr].unit,\n                        alarm : msg.payload[idev][props[iprop]][iattr].alarm.value,\n                        id  : msg.payload[idev].deviceType + '-' +  msg.payload[idev].name + '-' +  props[iprop] + '-' + msg.payload[idev][props[iprop]][iattr].attr,\n                        notify: msg.payload[idev][props[iprop]][iattr].alarm.notify\n                    };\n                    ++alarmCount;\n                }\n            }\n        }\n    }\n}\nvar newAlarmList = [];\nvar newAlarmCount = 0;\nfor (var ialarm = 0; ialarm < alarmCount; ++ialarm)\n{\n    var oldAlarm = oldAlarmList.find(oldAlarm => oldAlarm.id === alarmList[ialarm].id);\n    if (oldAlarm == undefined) \n    {\n        newAlarmList[newAlarmCount] = alarmList[ialarm];\n        ++newAlarmCount;\n    }\n}\ncontext.set('oldAlarmList', alarmList);\nreturn [{topic:'alarmList', payload:{topic:'alarmList',payload:alarmList}},{topic:'newAlarmList', payload:newAlarmList}];",
        "outputs": 2,
        "noerr": 0,
        "x": 600,
        "y": 740,
        "wires": [
            [
                "8923ffe3.37bda"
            ],
            [
                "fcd3d5a6.7bdaf8"
            ]
        ]
    },
    {
        "id": "1c8b36de.a489c9",
        "type": "sendsms",
        "z": "dc20c6e0.0feb98",
        "creds": "23623a1c.e4ce46",
        "to": "{{msg.to}}",
        "fr": "{{msg.from}}",
        "text": "{{msg.payload}}",
        "unicode": false,
        "x": 1250,
        "y": 800,
        "wires": [
            [
                "30c5692.3ac4c96"
            ]
        ]
    },
    {
        "id": "30c5692.3ac4c96",
        "type": "debug",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1390,
        "y": 800,
        "wires": []
    },
    {
        "id": "b6eb6c47.1e51",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Update ultra-ncab Database entry with MQTT",
        "func": "var device = \n{\n    name        : '001',\n    deviceType  : 'ultra-ncab',\n    arcPeriod   : 60000,\n    timeStamp   : 0,\n    lastArchive : 0,\n    readings    : \n    [ \n        { attr : 'maxAmp',      type : 'scalar',    value : 0,  unit : 'um',    alarm : {value : 0, limits: {lolo : 0.0,    low : 10.0,   high : 800.0,      hihi : 1000.0  }, notify:{name:'', number:'', time:0} } },\n        { attr : 'maxAmpMode',  type : 'scalar',    value : 0,  unit : 'Hz',    alarm : {value : 0, limits: {lolo : 0.3,    low : 0.5,    high : 85.0,       hihi : 88.0    }, notify:{name:'', number:'', time:0} } },\n        { attr : 'avgPower',    type : 'scalar',    value : 0,  unit : 'um',    alarm : {value : 0, limits: {lolo : 0.0,    low : 10,     high : 1000,       hihi : 100     }, notify:{name:'', number:'', time:0} } },\n        { attr : 'linkQuality', type : 'scalar',    value : 0,  unit : '/70',   alarm : {value : 0, limits: {lolo :  30,    low : 40,     high : 71,         hihi : 80      }, notify:{name:'', number:'', time:0} } },\n        { attr : 'signalLevel', type : 'scalar',    value : 0,  unit : 'dBm',   alarm : {value : 0, limits: {lolo : -70,    low : -60,    high : 0,          hihi : 30      }, notify:{name:'', number:'', time:0} } },\n        { attr : 'spectrum',    type : 'vector',    value : [[], []]   },\n        { attr : 'timeTrace',   type : 'vector',    value : [[], []]   }\n    ],\n    settings    :\n    [ \n        { attr : 'minDisplayMode',   type : 'scalar',    value : 0.5, unit : 'Hz',    alarm : {value : 0, limits: {lolo : 0.3,      low : 0.6,     high : 85,      hihi : 88   }, notify:{name:'', number:'', time:0} } },\n        { attr : 'maxDisplayMode',   type : 'scalar',    value : 80,  unit : 'Hz',    alarm : {value : 0, limits: {lolo : 0.3,      low : 0.6,     high : 85,      hihi : 88   }, notify:{name:'', number:'', time:0} } },\n        { attr : 'averages',         type : 'scalar',    value : 10,  unit : 'unit',  alarm : {value : 0, limits: {lolo : 1,        low : 1,       high : 20,      hihi : 100  }, notify:{name:'', number:'', time:0} } }\n    ]\n};\nreturn {topic:'blinky-lite/ultra-ncab/001/setting', payload:device};",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 1040,
        "wires": [
            [
                "f2a0c42e.7c1d68"
            ]
        ]
    },
    {
        "id": "3d10ca38.1dd0d6",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 1040,
        "wires": [
            [
                "b6eb6c47.1e51"
            ]
        ]
    },
    {
        "id": "fcd3d5a6.7bdaf8",
        "type": "split",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 750,
        "y": 800,
        "wires": [
            [
                "81b10ec2.0f878"
            ]
        ]
    },
    {
        "id": "81b10ec2.0f878",
        "type": "delay",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 900,
        "y": 800,
        "wires": [
            [
                "77c8c2b5.2b57ec"
            ]
        ]
    },
    {
        "id": "77c8c2b5.2b57ec",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Prepare SMS",
        "func": "if (msg.payload.notify.name.length < 1) return null;\nif (msg.payload.notify.number.length < 1) return null;\nvar type = '';\nif (msg.payload.alarm == 1) type = 'LOW';\nif (msg.payload.alarm == 2) type = 'HIGH';\nif (msg.payload.alarm == 3) type = 'LOLO';\nif (msg.payload.alarm == 4) type = 'HIHI';\nvar message = 'Alarm-' + type + ': ' + msg.payload.id;\nmessage = message + ' is at ' + msg.payload.value.toString() + ' ' + msg.payload.unit\nreturn {topic:'sms',to:msg.payload.notify.number, payload:message, from:'46000000000'};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1080,
        "y": 800,
        "wires": [
            [
                "1c8b36de.a489c9",
                "78c1fcc3.ec6164"
            ]
        ]
    },
    {
        "id": "39872684.4aa40a",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "settingsPassword",
        "topic": "settingsPassword",
        "payload": "SETTINGSPASSWORD",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 150,
        "y": 220,
        "wires": [
            [
                "996ed5f8.da8f88"
            ]
        ]
    },
    {
        "id": "996ed5f8.da8f88",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Save Settings Password",
        "func": "global.set(msg.topic,msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "f2a0c42e.7c1d68",
        "type": "mqtt out",
        "z": "e17f7487.2a78e8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "84d80994.260508",
        "x": 660,
        "y": 1040,
        "wires": []
    },
    {
        "id": "174cb425.13a64c",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "CheckLogin",
        "func": "if ('NULL' == global.get('settingsPassword'))\n    return [null, {topic:'getJwtToken',payload:msg.payload.userID, userID : msg.payload.userID}];\nif (msg.payload.payload.loginPassword != global.get('settingsPassword'))\n{\n    return [{topic:'getJwtToken', payload:{topic:'getJwtToken', userID:msg.payload.userID, token: null}}, null];\n}\nreturn [null, {topic:'getJwtToken',payload:msg.payload.userID, userID : msg.payload.userID}];",
        "outputs": 2,
        "noerr": 0,
        "x": 610,
        "y": 580,
        "wires": [
            [
                "7ed83a34.453664"
            ],
            [
                "70ed0ccf.7a2cd4"
            ]
        ]
    },
    {
        "id": "70ed0ccf.7a2cd4",
        "type": "JsonWebToken",
        "z": "dc20c6e0.0feb98",
        "name": "get Token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 830,
        "y": 600,
        "wires": [
            [
                "eeebc9b7.1b2438"
            ]
        ]
    },
    {
        "id": "eeebc9b7.1b2438",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Send Token",
        "func": "return {topic:'getJwtToken', payload:{topic:'getJwtToken', userID:msg.userID, token: msg.token}};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 600,
        "wires": [
            [
                "7ed83a34.453664"
            ]
        ]
    },
    {
        "id": "7ed83a34.453664",
        "type": "link out",
        "z": "dc20c6e0.0feb98",
        "name": "Token Link",
        "links": [
            "23adba5a.1575e6"
        ],
        "x": 1155,
        "y": 560,
        "wires": []
    },
    {
        "id": "10ada662.0629da",
        "type": "JsonWebToken",
        "z": "dc20c6e0.0feb98",
        "name": "decrypt Token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 850,
        "y": 520,
        "wires": [
            [
                "2ed6e079.2ab4d"
            ]
        ]
    },
    {
        "id": "2ed6e079.2ab4d",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Check Token",
        "func": "if (Number(msg.token) == msg.userID)\n{\n    return [msg, {topic : 'acknowledge', payload:{topic:'settingAcknowledge', payload: 'Success!', userID : msg.userID}}]\n}\nreturn [null, {topic : 'acknowledge', payload:{topic:'settingAcknowledge', payload: 'Bad token', userID : msg.userID}}];",
        "outputs": 2,
        "noerr": 0,
        "x": 1030,
        "y": 520,
        "wires": [
            [
                "6381975d.b98928",
                "2e134ccf.236a14"
            ],
            [
                "7ed83a34.453664"
            ]
        ]
    },
    {
        "id": "ba2c1c11.88703",
        "type": "template",
        "z": "fcfe7ca7.f566a",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color:var(--white);\n          padding-bottom: 10px;\n          padding-top: 10px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n          font-weight: 900;\n        }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n          padding: 10px;\n        }\n        .card-body\n        {\n          background-color: var(--color3);\n        }\n        .card-button\n        {\n          color: var(--color5);\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: bold;\n        }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n        }\n        .tableHeading\n        {\n          color:var(--color1);\n          font-weight: 900;\n        }\n        .tableText\n        {\n          color:var(--color1);\n          font-weight: 900;\n        }\n        .custom-select\n        {\n          color: white;\n          background-color: var(--color3);\n        \n        }\n        .form-control\n        {\n          text-align: center;\n        }\n        .checkbox-align\n        {\n          vertical-align: middle;\n          text-align: center;\n        }\n        .csv-linked\n        {\n            color: blue;\n        }\n        .csv-unlinked\n        {\n            color: red;\n        }\n        .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        div.ui-datepicker\n        {\n            font-size:50px;\n        }",
        "output": "str",
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "e4d36fde.932ed",
        "type": "subflow:fcfe7ca7.f566a",
        "z": "f22a539a.a67b3",
        "name": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "c8d8e93c.2234a8"
            ]
        ]
    },
    {
        "id": "f5a9eda8.5c5bc",
        "type": "template",
        "z": "e3c68b88.d82258",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .ui-slider\n        {\n            height: 90px;\n            background-color: var(--color1) !important;\n        }\n        .ui-slider .ui-slider-handle \n        {\n            height: 100px;\n            width: 100px;\n            background-color: var(--color5) !important;\n        }\n        .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n",
        "output": "str",
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "966e270e.701e48",
        "type": "subflow:e3c68b88.d82258",
        "z": "8341090a.df9758",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "899d0666.97b868"
            ]
        ]
    },
    {
        "id": "9460eaf0.da7628",
        "type": "subflow:ca529822.9112f8",
        "z": "8341090a.df9758",
        "name": "",
        "x": 490,
        "y": 80,
        "wires": []
    },
    {
        "id": "c104210d.418eb",
        "type": "template",
        "z": "2c5d25cb.3428ca",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\" width=\"20%\">\n                    <a href='/'><img src=\"/img/home.png\" height=\"75px\"/></a>\n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">{{{payload.title}}}</h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\"  width=\"20%\">\n                    <a href='https://www.blinky-lite.io/' target='_blank'>\n                        <img src=\"/img/BlinkyLogo.gif\" height=\"75px\"/>\n                    </a>                \n                </td>\n            </tr>\n        </table>\n    </div>\n",
        "output": "str",
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d08de07e.32d22",
        "type": "template",
        "z": "7eddf0fe.4ce23",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\" width=\"20%\">\n                    <a href='/'><img src=\"/img/home.png\" height=\"75px\"/></a>\n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">{{{payload.title}}}</h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\"  width=\"20%\">\n                    <a href='https://www.blinky-lite.io/' target='_blank'>\n                        <img src=\"/img/BlinkyLogo.gif\" height=\"75px\"/>\n                    </a>                \n                </td>\n            </tr>\n        </table>\n    </div>\n    \n",
        "output": "str",
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "899d0666.97b868",
        "type": "subflow:2c5d25cb.3428ca",
        "z": "8341090a.df9758",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "9460eaf0.da7628"
            ]
        ]
    },
    {
        "id": "c8d8e93c.2234a8",
        "type": "subflow:7eddf0fe.4ce23",
        "z": "f22a539a.a67b3",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "8a439be9.030ab8"
            ]
        ]
    },
    {
        "id": "72941646.0206b8",
        "type": "subflow:f22a539a.a67b3",
        "z": "dc20c6e0.0feb98",
        "x": 990,
        "y": 40,
        "wires": []
    },
    {
        "id": "bb160287.a4943",
        "type": "subflow:f22a539a.a67b3",
        "z": "dc20c6e0.0feb98",
        "x": 990,
        "y": 100,
        "wires": []
    },
    {
        "id": "bc45cf67.b90c6",
        "type": "subflow:f22a539a.a67b3",
        "z": "dc20c6e0.0feb98",
        "x": 990,
        "y": 160,
        "wires": []
    },
    {
        "id": "f07664a9.ede108",
        "type": "subflow:f22a539a.a67b3",
        "z": "dc20c6e0.0feb98",
        "x": 750,
        "y": 220,
        "wires": []
    },
    {
        "id": "23499d91.3b4bf2",
        "type": "comment",
        "z": "e17f7487.2a78e8",
        "name": "Careful - changes database!",
        "info": "",
        "x": 160,
        "y": 840,
        "wires": []
    },
    {
        "id": "58100264.e2a28c",
        "type": "websocket in",
        "z": "b94899c9.b16088",
        "name": "vectorPlotter",
        "server": "3c933d8a.80b7a2",
        "client": "",
        "x": 110,
        "y": 300,
        "wires": [
            [
                "ee46cfff.2056c"
            ]
        ]
    },
    {
        "id": "c10d43eb.a111b",
        "type": "websocket out",
        "z": "b94899c9.b16088",
        "name": "vectorPlotter",
        "server": "3c933d8a.80b7a2",
        "client": "",
        "x": 1530,
        "y": 180,
        "wires": []
    },
    {
        "id": "813098f2.aa5c28",
        "type": "http in",
        "z": "b94899c9.b16088",
        "name": "/vectorPlotter",
        "url": "/vectorPlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 40,
        "wires": [
            [
                "6a7aaea9.6b97f"
            ]
        ]
    },
    {
        "id": "43013e03.44494",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"33%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"33%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"33%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n            </tr>\n            <tr>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div class='vert-pad' width=\"100%\">\n        <div class='row'>\n            <div class='col-md-12'>\n                <div class='card'>\n                    <p class='card-title'>Spectrogram</p>\n                    <div class='card-body' align=\"center\">\n                        <div width=\"100%\" id=\"spectrogram\" align=\"center\"></div> \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div width=\"100%\">\n        <div class=\"row\"> \n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"freezeButton\" type=\"button\" onclick=\"freezeRun()\"></button>\n            </div>\n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"birdsEyeButton\" type=\"button\" onclick=\"birdsEyeView()\">Birds Eye</button>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"sliceViewButton\" type=\"button\" onclick=\"sliceView()\">Slice View</button>\n            </div>\n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"sliceViewButton\" type=\"button\" onclick=\"topView()\">Top View</button>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-6\" align=\"right\" >\n                <span class=\"tableHeading\" style=\"font-size: medium;\">Start Time</span>\n            </div>\n            <div class=\"col-md-6\">\n                <span class=\"tableHeading\"  style=\"font-size: medium;\" id=\"startTime\"></span>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-6\"  align=\"right\">\n                <span class=\"tableHeading\" style=\"font-size: medium;\">Stop Time</span>\n            </div>\n            <div class=\"col-md-6\">\n                <span class=\"tableHeading\" id=\"stopTime\" style=\"font-size: medium;\"></span>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-3\" align=\"right\" >\n                <span class=\"tableHeading\" style=\"font-size: medium;\">PlotSlices</span>\n            </div>\n            <div class=\"col-md-6\">\n                <input class=\"form-control center-justify\" id=\"plotslices\" type=\"text\" value=\"0\" style=\"font-size: medium;\"/>\n            </div>\n        </div>\n    </div>\n    ",
        "output": "str",
        "x": 550,
        "y": 40,
        "wires": [
            [
                "c6c23586.848c58"
            ]
        ]
    },
    {
        "id": "6a7aaea9.6b97f",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var numTraces = 1;\n        var deviceSelect = [];\n        var nameSelect = [];\n        var attrSelect=[];\n        var valSelect=[];\n        var devInfo = [];\n\n        var graph3d = null;\n        var itimeSlice = 0;\n        var timeMax = 32;\n        var dataArray = [];\n        var timeStamp = [];\n        var deltaT = 0;\n        var freeze = false;\n        var sliceViewActive = false;\n        var birdsEyeViewActive = false;\n        var topViewActive = false;\n        var birdsEyeTimeMax = 32;\n        var plotStarted = false;\n        \n        var threedPlotOptions =\n        {\n            width: '850px',\n            height: '600px',\n            style: 'surface',\n            showPerspective: false,\n            showGrid: true,\n            showShadow: false,\n            keepAspectRatio: false,\n            verticalRatio: 0.6,\n            showZAxis: true,\n            xLabel: 'x',\n            yLabel: 'Time',\n            tooltip: true,\n            axisColor: '#ffffff',\n        };\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                deviceSelect[itrace] = document.getElementById('deviceSelect' + itrace.toString());\n                nameSelect[itrace] = document.getElementById('nameSelect' + itrace.toString());\n                attrSelect[itrace] = document.getElementById('attrSelect' + itrace.toString());\n                valSelect[itrace] = document.getElementById('valSelect' + itrace.toString());\n                devInfo[itrace] = {deviceType: '', name : '',  prop : 'readings', attr : '',device : {}};\n            }\n            $(\"#freezeButton\").text('Running');\n            $(\"#plotslices\").val(timeMax.toString());\n            $(\"#plotslices\").change(function()\n            {\n                timeMax = Number($(\"#plotslices\").val());\n                if (timeMax < 2)\n                {\n                    alert('Number of plot slices must be greater than 1');\n                    timeMax = 2;\n                }\n                birdsEyeTimeMax = timeMax;\n                $(\"#plotslices\").val(timeMax.toString());\n                dataArray = [];\n                itimeSlice = 0;\n                plotStarted = false;\n            });\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n            setInterval(getDeviceValues, 1000);\n        }\n        function restartPlot()\n        {\n            console.log('booger');\n            $(\"#freezeButton\").text('Running');\n            $(\"#plotslices\").val(timeMax.toString());\n            dataArray = [];\n            itimeSlice = 0;\n            plotStarted = false;\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getDeviceList':\n                        loadDeviceList(msg.payload);\n                        break;\n                    case 'getNameList':\n                        loadNameList(msg);\n                        break;\n                    case 'getAttrList':\n                        loadAttrList(msg);\n                        break;\n                    case 'getDeviceValues':\n                        loadDeviceValues(msg);\n                        break;\n                    default:\n                       break;\n                }\n            }\n         }\n        function onWebSocketOpen()\n        {\n            sendWebSocketMessageObject({topic : 'getDeviceList',payload : {}, 'userID' : userID,});\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function loadDeviceList(deviceList)\n        {\n            deviceList.sort();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                for (var ii = 0; ii < deviceList.length; ++ii)\n                {\n                    var opt = document.createElement('option');\n                    opt.value = deviceList[ii];\n                    opt.innerHTML = deviceList[ii];\n                    deviceSelect[itrace].appendChild(opt);\n                }\n            }\n        }\n        function loadNameList(data)\n        {\n            data.nameList.sort();\n            for (var ii = 0; ii < data.nameList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.nameList[ii];\n                opt.innerHTML = data.nameList[ii];\n                nameSelect[data.trace].appendChild(opt);\n            }\n\n            return;\n        }\n        function loadAttrList(data)\n        {\n            data.attrList.sort();\n            for (var ii = 0; ii < data.attrList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.attrList[ii];\n                opt.innerHTML = data.attrList[ii];\n                attrSelect[data.trace].appendChild(opt);\n            }\n        }\n        function deviceSelected(itrace)\n        {\n            clearNameOptionList(itrace);\n            if (deviceSelect[itrace].value == 'notSelected') return;\n            nameSelect[itrace].value = 'notSelected';\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getNameList',\n                    userID      : userID,\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                });\n        }\n        function nameSelected(itrace)\n        {\n            clearAttrOptionList(itrace);\n            if (nameSelect[itrace].value == 'notSelected') return;\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getAttrList',\n                    userID      : userID,\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                    name        : nameSelect[itrace].value,\n                    prop        : 'readings'\n                });\n        }\n        function attrSelected(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n            restartPlot();\n            if (attrSelect[itrace].value == 'notSelected')  return;\n            devInfo[itrace].deviceType = deviceSelect[itrace].value;\n            devInfo[itrace].name = nameSelect[itrace].value;\n            devInfo[itrace].attr = attrSelect[itrace].value;\n\n        }\n        function clearNameOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (nameSelect[itrace].firstChild)\n            {\n                nameSelect[itrace].removeChild(nameSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            nameSelect[itrace].appendChild(opt);\n            clearAttrOptionList(itrace);\n        }\n        function clearAttrOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (attrSelect[itrace].firstChild)\n            {\n                attrSelect[itrace].removeChild(attrSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            attrSelect[itrace].appendChild(opt);\n            \n        }\n        function getDeviceValues()\n        {\n            var devList = [];\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if ((devInfo[itrace].deviceType.length > 0) && (devInfo[itrace].name.length > 0)) \n                {\n                    devList[traceCount] = { $and: [ {deviceType : devInfo[itrace].deviceType}, {name : devInfo[itrace].name}]};\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            var queryFilter = { $or: devList };\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getDeviceValues',\n                    userID      : userID,\n                    queryFilter : queryFilter,\n                });\n \n        }\n        function getAttrObject(device, itrace)\n        {\n            var props = device[devInfo[itrace].prop];\n            var attr = props.find(attr => attr.attr === devInfo[itrace].attr);\n            return attr;\n        }\n        function loadDeviceValues(data)\n        {\n            var devices = data.devices;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].attr.length > 0)\n                {\n                    for (idev = 0; idev < devices.length; ++idev)\n                    {\n                        if (devices[idev].deviceType == devInfo[itrace].deviceType)\n                        {\n                            if(devices[idev].name == devInfo[itrace].name)\n                            {\n                                devInfo[itrace].device = devices[idev];\n                                var attr = getAttrObject(devInfo[itrace].device, itrace);\n                                upDatePlot(attr.value);\n                            }\n                        }\n                    } \n                }\n            }\n        }\n        function upDatePlot(value)\n        {\n            var npts = value[0].length;\n            if(!plotStarted)\n            {\n                dataArray = [];\n                for (var ix = 0; ix < npts; ++ix)\n                {\n                    dataArray[ix] =\n                    {\n                        'x': value[0][ix],\n                        'y': 0,\n                        'z': value[1][ix],\n                        'style': value[1][ix]\n                    };\n                }\n                var container = document.getElementById('spectrogram');\n            \n                graph3d = new vis.Graph3d(container, dataArray, threedPlotOptions);\n                $(\"#startTime\").text(new Date().toLocaleString());\n                $(\"#stopTime\").text(new Date().toLocaleString());\n                graph3d.on('cameraPositionChange', onCameraPositionChange);\n                if (sliceViewActive) sliceView();\n                if (birdsEyeViewActive) birdsEyeView();\n                if (topViewActive) topView();\n                plotStarted = true;\n            }\n            else\n            {\n                if (freeze) return;\n                if (itimeSlice < timeMax)\n                {\n                    timeStamp[itimeSlice] = new Date().getTime();\n                    deltaT = (timeStamp[itimeSlice] - timeStamp[0]) / 1000;\n                    for (var ix = 0; ix < npts; ++ix)\n                    {\n                        dataArray[itimeSlice * npts + ix] =\n                        {\n                            'x': value[0][ix],\n                            'y': deltaT,\n                            'z': value[1][ix],\n                            'style': value[1][ix]\n                        };\n                    }\n                    ++itimeSlice;\n                }\n                else\n                {\n                    for (var itime = 0; itime < (timeMax - 1); ++itime)\n                    {\n                        timeStamp[itime] = timeStamp[itime + 1];\n                        deltaT = (timeStamp[itime] - timeStamp[0]) / 1000;\n                        for (var ix = 0; ix < npts; ++ix)\n                        {\n                            dataArray[itime * npts + ix] =\n                            {\n                                'x': dataArray[(itime + 1) * npts + ix].x,\n                                'y': deltaT,\n                                'z': dataArray[(itime + 1) * npts + ix].z,\n                                'style': dataArray[(itime + 1) * npts + ix].style\n                            };\n                        }\n                    }\n                    timeStamp[timeMax - 1] = new Date().getTime();\n                    deltaT = (timeStamp[timeMax - 1] - timeStamp[0]) / 1000;\n                    for (var ix = 0; ix < npts; ++ix)\n                    {\n                        dataArray[(timeMax - 1) * npts + ix] =\n                        {\n                            'x': value[0][ix],\n                            'y': deltaT,\n                            'z': value[1][ix],\n                            'style': value[1][ix]\n                        };\n                    }\n                }\n                $(\"#startTime\").text(new Date(timeStamp[0]).toLocaleString());\n                $(\"#stopTime\").text(new Date(timeStamp[itimeSlice - 1]).toLocaleString());\n                graph3d.setData(dataArray);\n            }\n        }\n        function getAttrObject(device, itrace)\n        {\n            var props = device[devInfo[itrace].prop];\n            var attr = props.find(attr => attr.attr === devInfo[itrace].attr);\n            return attr;\n        }\n        function freezeRun()\n        {\n            freeze = !freeze;\n            if (freeze)\n            {\n                $(\"#freezeButton\").text('Frozen');\n            }\n            else\n            {\n                $(\"#freezeButton\").text('Running');\n            }\n        }\n        \n        function birdsEyeView()\n        {\n            var horzAngle = 315.0 * 3.1415927 / 180.0;\n            var vertAngle = 45.0 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n            if (sliceViewActive)\n            {\n                timeMax =  birdsEyeTimeMax;\n                $(\"#plotslices\").val(timeMax.toString());\n            }\n            sliceViewActive = false;\n            birdsEyeViewActive = true;\n            topViewActive = false;\n        }\n        function sliceView()\n        {\n            var horzAngle = 0.0 * 3.1415927 / 180.0;\n            var vertAngle = 0.0 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 1.1});\n            timeMax = 2;\n            $(\"#plotslices\").val(timeMax.toString());\n            itimeSlice = 0;\n            plotStarted = false;\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n        }\n        function topView()\n        {\n            var horzAngle = 0 * 3.1415927 / 180.0;\n            var vertAngle = 90 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n            if (sliceViewActive)\n            {\n                timeMax =  birdsEyeTimeMax;\n                $(\"#plotslices\").val(timeMax.toString());\n            }\n            sliceViewActive = false;\n            birdsEyeViewActive = false;\n            topViewActive = true;\n        }\n        function onCameraPositionChange(event)\n        {\n            if (sliceViewActive) sliceView();\n            if (birdsEyeViewActive) birdsEyeView();\n            if (topViewActive) topView();\n        }",
        "output": "str",
        "x": 300,
        "y": 40,
        "wires": [
            [
                "6f9d3e8e.5dd7c"
            ]
        ]
    },
    {
        "id": "6f9d3e8e.5dd7c",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vector Plotter",
        "output": "str",
        "x": 430,
        "y": 40,
        "wires": [
            [
                "43013e03.44494"
            ]
        ]
    },
    {
        "id": "c6c23586.848c58",
        "type": "subflow:f22a539a.a67b3",
        "z": "b94899c9.b16088",
        "x": 690,
        "y": 40,
        "wires": []
    },
    {
        "id": "ee46cfff.2056c",
        "type": "json",
        "z": "b94899c9.b16088",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 340,
        "wires": [
            [
                "23847e72.ad5052"
            ]
        ]
    },
    {
        "id": "23847e72.ad5052",
        "type": "switch",
        "z": "b94899c9.b16088",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDeviceList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDeviceValues",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getArchiveValues",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 410,
        "y": 340,
        "wires": [
            [
                "239425dd.8a514a"
            ],
            [
                "c143b50b.37c0a8"
            ],
            [
                "567d6cad.83f094"
            ],
            [
                "80e43fea.99b4b"
            ],
            [
                "e42fbd97.1acb"
            ]
        ]
    },
    {
        "id": "239425dd.8a514a",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getDeviceList",
        "func": "var newMsg = \n{\n    topic           : 'getDeviceList',\n    userID          : msg.payload.userID,\n    payload         : [{},{projection:{deviceType:1, _id:0}}]\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 260,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "567d6cad.83f094",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getAttrList",
        "func": "var projectionFilter =  {projection:{readings:1,_id:0}};\nif (msg.payload.prop == 'settings') projectionFilter =  {projection:{settings:1,_id:0}};\nvar newMsg = \n{\n    topic           : 'getAttrList',\n    userID          : msg.payload.userID,\n    payload         : [{$and : [{deviceType:msg.payload.deviceType}, {name:msg.payload.name}]}, projectionFilter],\n    prop            : msg.payload.prop,\n    name            : msg.payload.name,\n    deviceType      : msg.payload.deviceType,\n    trace           : msg.payload.trace\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 340,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "80e43fea.99b4b",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getDeviceValues",
        "func": "var projectionFilter =  {projection:{_id:0}};\nvar newMsg = \n{\n    topic           : 'getDeviceValues',\n    userID          : msg.payload.userID,\n    payload         : [msg.payload.queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 380,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "cca5ce34.ad466",
        "type": "mongodb3 in",
        "z": "b94899c9.b16088",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "find.toArray",
        "x": 870,
        "y": 300,
        "wires": [
            [
                "cf416706.322028"
            ]
        ]
    },
    {
        "id": "cf416706.322028",
        "type": "switch",
        "z": "b94899c9.b16088",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDeviceList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDeviceValues",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1070,
        "y": 300,
        "wires": [
            [
                "1f313e3a.8bfc52"
            ],
            [
                "7737092b.94fb48"
            ],
            [
                "bcfe30d9.5f058"
            ],
            [
                "b731442a.4504b8"
            ]
        ]
    },
    {
        "id": "1f313e3a.8bfc52",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse device list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nvar deviceList = [];\ndeviceList[0] = msg.payload[0].deviceType;\nif (numDevices > 1)\n{\n    for (var idevice = 1; idevice < numDevices; ++idevice)\n    {\n        var deviceAlreadyFound = false;\n        for (ii = 0; ii < idevice; ++ii)\n        {\n            if (msg.payload[idevice].deviceType == deviceList[ii]) deviceAlreadyFound = true;\n        }\n        if (!deviceAlreadyFound) deviceList[idevice] = msg.payload[idevice].deviceType;\n    }\n}\n\nreturn {\n    topic:'getDeviceList',\n    payload:{\n        topic           : 'getDeviceList',\n        payload         : deviceList,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1280,
        "y": 240,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "bcfe30d9.5f058",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse attrList",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nif (numDevices < 1) return null;\nvar attrListBig = msg.payload[0][msg.prop];\nvar attrList = [];\nvar attrCount = 0;\nfor (var ii = 0; ii < attrListBig.length; ++ii)\n{\n    if (attrListBig[ii].type == 'vector')\n    {\n        attrList[attrCount] = attrListBig[ii].attr;\n        ++attrCount\n    }\n}\nif (attrCount < 1) return null;\nreturn {\n    topic:'getAttrList',\n    payload:{\n        topic           : 'getAttrList',\n        userID          : msg.userID,\n        prop            : msg.prop,\n        name            : msg.name,\n        trace           : msg.trace,\n        attrList        : attrList\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1270,
        "y": 320,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "b731442a.4504b8",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse getDeviceValues",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nif (numDevices < 1) return null;\nvar devices = [];\nfor (var idev = 0; idev < numDevices; ++idev) devices[idev] = msg.payload[idev];\nreturn {\n    topic:'getDeviceValues',\n    payload:{\n        topic           : 'getDeviceValues',\n        userID          : msg.userID,\n        devices         : devices,\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1300,
        "y": 360,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "e42fbd97.1acb",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getArchiveValues",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n        deviceType                  :   1,  \n        name                        :   1,  \n        timeStamp                   :   1, \n        [msg.payload.device.prop]   : \n        {\n            $elemMatch  : \n            {   \n                attr    : msg.payload.device.attr \n            }\n        } \n    } \n};\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            deviceType: msg.payload.device.deviceType\n        },\n        {\n            name: msg.payload.device.name\n        },\n        {\n            timeStamp :\n            {\n                $gte: msg.payload.device.startDate,\n                $lte: msg.payload.device.stopDate\n            }\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : 'getArchiveValues',\n    userID          : msg.payload.userID,\n    payload         : [queryFilter, projectionFilter],\n    device          : msg.payload.device,\n    maxPtsToPlot    : msg.payload.maxPtsToPlot,\n    itrace          : msg.payload.device.itrace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 420,
        "wires": [
            [
                "3ea29ec6.e9bfa2"
            ]
        ]
    },
    {
        "id": "3ea29ec6.e9bfa2",
        "type": "mongodb3 in",
        "z": "b94899c9.b16088",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 870,
        "y": 500,
        "wires": [
            [
                "22a317f1.3a10b8"
            ]
        ]
    },
    {
        "id": "22a317f1.3a10b8",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic:'getArchiveValues',\n        payload:{\n            topic           : 'getArchiveValues',\n            payload         : {itrace: msg.itrace, trace:null},\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\nvar trace = [];\nvar maxPts = msg.maxPtsToPlot;\nvar nstep = numRecords / msg.maxPtsToPlot;\nif (nstep < 1.0) \n{\n    nstep = 1.0;\n    maxPts = numRecords;\n}\nvar icnt = 0;\n\nwhile(icnt < maxPts)\n{\n    var index = Math.round(icnt * nstep);\n    trace[icnt] = {timeStamp: records[index].timeStamp, value: records[index][msg.device.prop][0].value};\n    ++icnt\n}\n\nreturn {\n    topic:'getArchiveValues',\n    payload:{\n        topic           : 'getArchiveValues',\n        payload         : {itrace: msg.itrace, trace:trace},\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 540,
        "wires": [
            [
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "a45c73b4.cd0d1",
        "type": "websocket in",
        "z": "b94899c9.b16088",
        "name": "vectorArchivePlotter",
        "server": "869ccabd.6400e8",
        "client": "",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "ee46cfff.2056c"
            ]
        ]
    },
    {
        "id": "aa9e819c.38f8f",
        "type": "websocket out",
        "z": "b94899c9.b16088",
        "name": "vectorArchivePlotter",
        "server": "869ccabd.6400e8",
        "client": "",
        "x": 1600,
        "y": 520,
        "wires": []
    },
    {
        "id": "f424cab0.278588",
        "type": "http in",
        "z": "b94899c9.b16088",
        "name": "/vectorArchivePlotter",
        "url": "/vectorArchivePlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "fd934b09.f641b8"
            ]
        ]
    },
    {
        "id": "a2e15003.8612b",
        "type": "subflow:f22a539a.a67b3",
        "z": "b94899c9.b16088",
        "x": 710,
        "y": 140,
        "wires": []
    },
    {
        "id": "fd934b09.f641b8",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var numTraces = 1;\n        var deviceSelect = [];\n        var nameSelect = [];\n        var attrSelect=[];\n        var devInfo = [];\n        \n        var startDate = 0;\n        var stopDate = 0;\n        var csvFile = [];\n\n        var archiveRequestList = [];\n        var archiveList = [];\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                deviceSelect[itrace] = document.getElementById('deviceSelect' + itrace.toString());\n                nameSelect[itrace] = document.getElementById('nameSelect' + itrace.toString());\n                attrSelect[itrace] = document.getElementById('attrSelect' + itrace.toString());\n                devInfo[itrace] = {deviceType  : '', name : '', prop : 'readings', attr : '',device : {}};\n\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n                csvFile[itrace] = null;\n\n            }\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n            $('#plotViewButtons').hide();\n        }\n        function onWebSocketOpen()\n        {\n            sendWebSocketMessageObject({topic : 'getDeviceList',payload : {}, 'userID' : userID,});\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getDeviceList':\n                        loadDeviceList(msg.payload);\n                        break;\n                    case 'getNameList':\n                        loadNameList(msg);\n                        break;\n                    case 'getAttrList':\n                        loadAttrList(msg);\n                        break;\n                    case 'getArchiveValues':\n                        archiveList.push(msg.payload);\n                        if (archiveRequestList.length > 0)\n                        {\n                            getArchiveValues();\n                        }\n                        else\n                        {\n                            plotArchive();\n                        }\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function loadDeviceList(deviceList)\n        {\n            deviceList.sort();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                for (var ii = 0; ii < deviceList.length; ++ii)\n                {\n                    var opt = document.createElement('option');\n                    opt.value = deviceList[ii];\n                    opt.innerHTML = deviceList[ii];\n                    deviceSelect[itrace].appendChild(opt);\n                }\n            }\n        }\n        function loadNameList(data)\n        {\n            data.nameList.sort();\n            for (var ii = 0; ii < data.nameList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.nameList[ii];\n                opt.innerHTML = data.nameList[ii];\n                nameSelect[data.trace].appendChild(opt);\n            }\n\n            return;\n        }\n        function loadAttrList(data)\n        {\n            data.attrList.sort();\n            for (var ii = 0; ii < data.attrList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.attrList[ii];\n                opt.innerHTML = data.attrList[ii];\n                attrSelect[data.trace].appendChild(opt);\n            }\n        }\n        function deviceSelected(itrace)\n        {\n            clearNameOptionList(itrace);\n            if (deviceSelect[itrace].value == 'notSelected') return;\n            nameSelect[itrace].value = 'notSelected';\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getNameList',\n                    userID      : userID,\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                });\n        }\n        function nameSelected(itrace)\n        {\n            clearAttrOptionList(itrace);\n            if (nameSelect[itrace].value == 'notSelected') return;\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getAttrList',\n                    userID      : userID,\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                    name        : nameSelect[itrace].value,\n                    prop        : 'readings'\n                });\n        }\n        function attrSelected(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n            if (attrSelect[itrace].value == 'notSelected')  return;\n            devInfo[itrace].deviceType = deviceSelect[itrace].value;\n            devInfo[itrace].name = nameSelect[itrace].value;\n            devInfo[itrace].attr = attrSelect[itrace].value;\n\n        }\n        function clearNameOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (nameSelect[itrace].firstChild)\n            {\n                nameSelect[itrace].removeChild(nameSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            nameSelect[itrace].appendChild(opt);\n            clearAttrOptionList(itrace);\n        }\n        function clearAttrOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (attrSelect[itrace].firstChild)\n            {\n                attrSelect[itrace].removeChild(attrSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            attrSelect[itrace].appendChild(opt);\n            \n        }\n        function getArchiveData()\n        {\n\n            archiveRequestList = [];\n            archiveList = [];\n            startDate = new Date($( \"#startDate\" ).val()).getTime();\n            stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].attr.length > 0) \n                {\n                    archiveRequestList[traceCount] = \n                    {\n                        deviceType  : devInfo[itrace].deviceType, \n                        name        : devInfo[itrace].name, \n                        prop        : devInfo[itrace].prop, \n                        attr        : devInfo[itrace].attr,\n                        startDate: startDate, \n                        stopDate: stopDate,\n                        itrace  :   itrace\n                    };\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            $('#plotSetupTable').hide();\n            $('#timePlotCard').hide();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            }\n            messageDialog('Alert', 'Wait!', 'Requesting data ...');\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var maxPtsToPlot = Number($( \"#maxPtsToPlot\" ).val());\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getArchiveValues',\n                    userID      : userID,\n                    device      : archiveRequestList[0],\n                    maxPtsToPlot: maxPtsToPlot\n                });\n            archiveRequestList.shift();\n            return;\n        }\n        function plotArchive()\n        {\n            $( \"#messageDialog\" ).dialog('close');\n            $('#plotSetupTable').show();\n            \n            $('#plotViewButtons').show();\n            $('#timePlot').show();\n            makeCsvFile();\n            var npts = archiveList[0].trace.length;\n            var oodataArray = [];\n            \n            var nxMax = archiveList[0].trace[0].value[0].length;\n            for (var ii = 0; ii < npts; ++ii)\n            {\n                var yvalue = Math.round((archiveList[0].trace[ii].timeStamp - archiveList[0].trace[0].timeStamp)/3600) / 1000;\n                for (var ix = 0; ix < nxMax; ++ix)\n                {\n                    var zvalue = archiveList[0].trace[ii].value[1][ix];\n                    oodataArray[ii * nxMax + ix] =\n                    {\n                        'x': archiveList[0].trace[ii].value[0][ix],\n                        'y': yvalue,\n                        'z': zvalue,\n                        'style': zvalue\n                    };\n                }\n            }\n            var options = \n            {\n                width:  '100%',\n                height: '800px',\n                style: 'surface',\n                showPerspective: false,\n                showGrid: true,\n                showShadow: false,\n                keepAspectRatio: false,\n                verticalRatio: 1.0,\n                showZAxis: true,\n                yCenter: '50%',\n                xLabel: 'x',\n                yLabel: 'Time (hr)',\n                zLabel: 'y',\n                tooltip: true,\n                axisColor: '#000000'\n            };\n        \n            // create a graph3d\n            var container = document.getElementById('timePlot');\n        \n            graph3d = new vis.Graph3d(container, oodataArray, options);\n            var horzAngle = 0 * 3.1415927 / 180.0;\n            var vertAngle = 90 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n        }\n        function changePlotView(horzAngleDeg, vertAngleDeg)\n        {\n            var horzAngle = horzAngleDeg * 3.1415927 / 180.0;\n            var vertAngle = vertAngleDeg * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n        }\n        function makeCsvFile ()\n        {\n            var itrace = 0;\n            var dataString = '';\n            var startT = archiveList[0].trace[0].timeStamp;\n        \n            dataString = dataString + 'Device,' + devInfo[0].deviceType + ',' + devInfo[0].name + ',' + devInfo[0].prop + ',' + devInfo[0].attr  +'\\n';\n            dataString = dataString + 'StartDate,' + new Date(startT).toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}) + '\\n';\n            dataString = dataString + 'StartDate (mS),' + startT.toString() + '\\n';\n            dataString = dataString + 'Time (sec),  \\n 0,x';\n            for (var ipt = 0; ipt < archiveList[0].trace[0].value[0].length; ++ipt) dataString = dataString + ',' + archiveList[0].trace[0].value[0][ipt];\n            dataString = dataString + '\\n';\n\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n\n                var x = (archiveList[0].trace[ii].timeStamp - startT) / 1000;\n                dataString = dataString + x.toString() + ',y';\n                for (var ipt = 0; ipt < archiveList[0].trace[ii].value[1].length; ++ipt) dataString = dataString + ',' + archiveList[0].trace[ii].value[1][ipt];\n                dataString = dataString + '\\n';\n            }\n            var data = new Blob([dataString], {type: 'text/plain'});\n        \n            // If we are replacing a previously generated file we need to\n            // manually revoke the object URL to avoid memory leaks.\n            if (csvFile[itrace] !== null) {\n              window.URL.revokeObjectURL(csvFile[itrace]);\n            }\n        \n            csvFile[itrace] = window.URL.createObjectURL(data);\n            // returns a URL you can use as a href\n            $('#csv'+ itrace.toString()).css('color', 'blue');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'underline');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            $('#csv'+ itrace.toString()).attr(\"href\", csvFile[itrace]);\n            $('#csv'+ itrace.toString()).attr(\"download\", devInfo[itrace].deviceType + '-' + devInfo[itrace].name + '-' + devInfo[itrace].prop + '-' + devInfo[itrace].attr + '.csv');\n        \n        }\n",
        "output": "str",
        "x": 310,
        "y": 140,
        "wires": [
            [
                "e01d1110.ea59"
            ]
        ]
    },
    {
        "id": "e01d1110.ea59",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vector Archive Plotter",
        "output": "str",
        "x": 450,
        "y": 140,
        "wires": [
            [
                "7bae9ecc.c5e5b"
            ]
        ]
    },
    {
        "id": "7bae9ecc.c5e5b",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"5%\" align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                <td width=\"30%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"30%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"30%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv0' href='' target='_blank' download=\"data0.csv\" class=\"csv-linked\">1</a>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div id='plotSetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td width=10% align=\"center\" class=\"tableHeading\">Max Plot Pts</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Start</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Stop</td>\n                        <td width=10% align=\"center\"></td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"maxPtsToPlot\" type=\"text\" value=\"500\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getArchiveData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n       </div>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotTable'>\n                    <tr valign=\"top\">\n                        <td width='5%'>\n                            <table id='plotViewButtons'>\n                                <tr>\n                                    <td>\n                                        <button class=\"btn jumbotron-button btn-block\" id=\"birdsEyeButton\" type=\"button\" onclick=\"changePlotView(315,45)\">Birds Eye</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button class=\"btn jumbotron-button btn-block\" id=\"overviewButton\" type=\"button\" onclick=\"changePlotView(0,90)\" >Overview</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button class=\"btn jumbotron-button btn-block\" id=\"xviewButton\"    type=\"button\" onclick=\"changePlotView(0,0)\"  >X View</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                        <td width='95%' >\n                            <div id=\"timePlot\" width=\"100%\" class=\"plot\"></div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 570,
        "y": 140,
        "wires": [
            [
                "a2e15003.8612b"
            ]
        ]
    },
    {
        "id": "66191cda.ec66b4",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "Prune every 2 hours",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "7200",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "x": 160,
        "y": 340,
        "wires": [
            [
                "f8190aec.49ef68"
            ]
        ]
    },
    {
        "id": "f8190aec.49ef68",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "stats",
        "x": 390,
        "y": 340,
        "wires": [
            [
                "cd274381.ab6c7"
            ]
        ]
    },
    {
        "id": "b21dfdef.d025b",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 930,
        "y": 340,
        "wires": [
            [
                "9422ccdf.a61ab"
            ]
        ]
    },
    {
        "id": "cd274381.ab6c7",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Find Number of Records to cut",
        "func": "var maxDbSize = global.get('maxDbSize');\nif (maxDbSize == undefined) return null;\nif (msg.payload.size < maxDbSize) return null;\nvar cutRecords = Math.round( (msg.payload.size - 0.9 * maxDbSize) / msg.payload.avgObjSize);\nvar newMsg = \n{\n    topic           : 'test',\n    payload         : [{},{projection:{timeStamp:1, _id:0}}],\n    cutRecords      : cutRecords\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 340,
        "wires": [
            [
                "b21dfdef.d025b",
                "7e50c6f8.b2b708"
            ]
        ]
    },
    {
        "id": "9422ccdf.a61ab",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Find latest Time Stamp",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nvar timeStampList = [];\n\nfor (var idevice = 0; idevice < numDevices; ++idevice)\n{\n    timeStampList[idevice] = msg.payload[idevice].timeStamp;\n}\ntimeStampList.sort();\n\n\nvar newMsg = \n{\n    topic           : 'test',\n    payload         : [{timeStamp: {\"$lte\": timeStampList[msg.cutRecords]}},{projection:{timeStamp:1, _id:0}}],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 400,
        "wires": [
            [
                "dabac723.bcc468"
            ]
        ]
    },
    {
        "id": "dabac723.bcc468",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "removeMany",
        "x": 930,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "4caf3fb1.f3572",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "maxDbSize",
        "topic": "maxDbSize",
        "payload": "MAXDBSIZE",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 130,
        "y": 280,
        "wires": [
            [
                "2208dd06.5d2ba2"
            ]
        ]
    },
    {
        "id": "2208dd06.5d2ba2",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Save maxDbSize",
        "func": "global.set(msg.topic,Number(msg.payload));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "6ee884d5.e2b2bc",
        "type": "template",
        "z": "8475ab9.3d26058",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.spectrogram}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.ultraAmpBar}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 990,
        "y": 320,
        "wires": [
            [
                "3a38071f.ae4798"
            ]
        ]
    },
    {
        "id": "a83f817b.5032b",
        "type": "template",
        "z": "8475ab9.3d26058",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.spectrogram}}}\n{{{payload.script.editAmpPower}}}\n{{{payload.script.horzbarWidget}}}\n",
        "output": "str",
        "x": 560,
        "y": 240,
        "wires": [
            [
                "97fab312.6b40a"
            ]
        ]
    },
    {
        "id": "29aa5410.d24f1c",
        "type": "http in",
        "z": "8475ab9.3d26058",
        "name": "/ultra-ncab",
        "url": "/ultra-ncab",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "71b75beb.7d99b4"
            ]
        ]
    },
    {
        "id": "61f6a690.76b898",
        "type": "template",
        "z": "8475ab9.3d26058",
        "name": "Title 1",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Ultra Ncab {{{payload.script.name}}}",
        "output": "str",
        "x": 430,
        "y": 120,
        "wires": [
            [
                "95937ebc.cd75a"
            ]
        ]
    },
    {
        "id": "aa54395e.1b6888",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "ultra-ncab/websocket",
        "server": "e6c7842e.bc4f98",
        "client": "",
        "x": 1220,
        "y": 760,
        "wires": []
    },
    {
        "id": "95937ebc.cd75a",
        "type": "template",
        "z": "8475ab9.3d26058",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n\n        var graph3d = null;\n        var itimeSlice = 0;\n        var oodataArray = [];\n        var timeStamp = [];\n        var deltaT = 0;\n        var freeze = false;\n        var sliceViewActive = false;\n        var birdsEyeViewActive = false;\n        var topViewActive = false;\n        var birdsEyeTimeMax = 100; \n        var timeMax = birdsEyeTimeMax;\n        var modeMax = 255;\n        var modeMin = 1;\n        var maxAmpScale = 8250;\n        var editDeviceProperty = '';\n\n        var threedPlotOptions = \n        {\n            width: '850px',\n            height: '600px',\n            style: 'surface',\n            showPerspective: false,\n            showGrid: true,\n            showShadow: false,\n            keepAspectRatio: false,\n            verticalRatio: 0.6,\n            showZAxis: true,\n            zLabel: 'dB',\n            xLabel: 'Freq (Hz)',\n            yLabel: 'Time',\n            tooltip: true,\n            axisColor: '#000000',\n            zMin:0,\n            zMax:10\n        };\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            $(\"#freezeButton\").text('Running');\n            $(\"#plotslices\").val(timeMax.toString());\n            $('#waitForArchiveMessage').hide();\n\n            drawSpectrogram();\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            wsConnectC();\n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.mqttDevice.name == restfulDevice.name)\n                    {\n                        heartbeat();\n                        device = msg.payload;\n                        mqttDevice = msg.mqttDevice;\n                        $('#linkQualityId').text(getAttrObject('readings', 'linkQuality').value);\n                        $('#signalLevelId').text(getAttrObject('readings', 'signalLevel').value);\n                        updateUltraAmpBarChart();\n                        addOoDataArrays();\n                    }\n                    break;\n                case 'getJwtToken':\n                    if (msg.userID == userID) loadJwtToken(msg);\n                    break;\n                case 'settingAcknowledge':\n                    if (msg.userID == userID)\n                    {\n                        if (msg.payload != 'Success!') acknowledgeDialog('Acknowledge', 'Setting', msg.payload);\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n        function updateUltraAmpBarChart()\n        {\n            var ultraAmpAttr = getAttrObject('readings', 'ultraAmp');\n            var ultraAmpBarConfig = \n                {\n                    lolo            : ultraAmpAttr.alarm.limits.lolo, \n                    low             : ultraAmpAttr.alarm.limits.low, \n                    high            : ultraAmpAttr.alarm.limits.high, \n                    hihi            : ultraAmpAttr.alarm.limits.hihi, \n                    value           : ultraAmpAttr.value, \n                    unit            : ultraAmpAttr.unit, \n                    textsize        : 38,\n                    label           : 'ultraAmp', \n                    lowColor        : '#ff0000', \n                    mediumColor     : '#ffff00',\n                    highColor       : '#00ff00', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : '#000000', \n                    gridColor       : '#ffffff',\n                    height          : 300, \n                    htmlId          : 'ultraAmpBarPlot'\n                };\n            setHorzBarWidget(ultraAmpBarConfig);\n            \n        }\n\n        function getAttrObject(propsName, attrName)\n        {\n            var props = device[propsName];\n            var attr = props.find(attr => attr.attr === attrName);\n            return attr;\n        }\n",
        "output": "str",
        "x": 570,
        "y": 120,
        "wires": [
            [
                "b443db02.709c08"
            ]
        ]
    },
    {
        "id": "75feff69.10cda",
        "type": "template",
        "z": "8475ab9.3d26058",
        "name": "script.spectrogram",
        "field": "payload.script.spectrogram",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// spectrogram Javascript\n        function initializeDataArray()\n        {   \n            oodataArray = [];\n            itimeSlice = 0;\n            for (var imode = modeMin; imode <= modeMax; ++imode)\n            {\n                var value = -60.0;\n                oodataArray[imode - modeMin] =\n                {\n                    'x': imode,\n                    'y': 0,\n                    'z': value,\n                    'style': value\n                };\n            }\n        }\n        function drawSpectrogram()\n        {\n            var container = document.getElementById('spectrogram');\n            initializeDataArray();\n            threedPlotOptions.zMax = 0.0;\n            threedPlotOptions.zMin = 20.0 * Math.log10(1.0 / maxAmpScale);\n            \n            graph3d = new vis.Graph3d(container, oodataArray, threedPlotOptions);\n            $(\"#startTime\").text(new Date().toLocaleString());\n            $(\"#stopTime\").text(new Date().toLocaleString());\n            graph3d.on('cameraPositionChange', onCameraPositionChange);\n//            birdsEyeView();\n            sliceView();\n        }\n        function addOoDataArrays()\n        {\n            var spectrum =  getAttrObject('readings', 'spectrum');\n            var maxAmp =  getAttrObject('readings', 'maxAmp');\n            var spectrumArray = spectrum.value[1];\n            var freqArray = spectrum.value[0];\n\n            var maxAmpMode =  getAttrObject('readings', 'maxAmpMode');\n            var minDisplayMode =  getAttrObject('settings', 'minDisplayMode');\n            var maxDisplayMode =  getAttrObject('settings', 'maxDisplayMode');\n\n            npts = freqArray.length * 2.0;\n            npts2 = freqArray.length;\n            var sampleRate = 2.0 * (freqArray[npts2 - 1] - freqArray[0]);\n            var minDisplayModeIndex = Math.round(minDisplayMode.value * npts / sampleRate);\n            var maxDisplayModeIndex = Math.round(maxDisplayMode.value * npts / sampleRate);\n            \n            if (minDisplayModeIndex < 1) minDisplayModeIndex = 1;\n            if (maxDisplayModeIndex > 255) maxDisplayModeIndex = 255;\n            minDisplayModeIndex = 0;\n            \n            if ((modeMax != maxDisplayModeIndex) || (modeMin != minDisplayModeIndex))\n            {\n                modeMin = minDisplayModeIndex;\n                modeMax = maxDisplayModeIndex;\n                initializeDataArray();\n                graph3d.redraw();\n                return;\n            }\n            if (freeze) return;\n\n            var mostExcitedModeAmp = maxAmp.value;\n            var mostExcitedMode = maxAmpMode.value;\n            $(\"#maxMode\").text(Math.round(100 * mostExcitedMode) / 100);\n            $(\"#maxModeAmplitude\").text(Math.round(100 * mostExcitedModeAmp) / 100);\n        \n            if (itimeSlice < timeMax)\n            {\n                timeStamp[itimeSlice] = new Date().getTime();\n                deltaT = (timeStamp[itimeSlice] - timeStamp[0]) / 1000;\n                for (var imode = modeMin; imode <= modeMax; ++imode)\n                {\n                    var value = Math.round(100.0 * Number(spectrumArray[imode])) / 100.0;\n                    if (value < 1.0)  value = 1.0;\n                    value = 20.0 * Math.log10(value / maxAmpScale);\n                    oodataArray[itimeSlice * (modeMax - modeMin + 1) + (imode - modeMin)] =\n                    {\n                        'x': freqArray[imode],\n                        'y': deltaT,\n                        'z': value,\n//                        'style': value\n                    };\n                }\n                ++itimeSlice;\n            }\n            else\n            {\n                for (var itime = 0; itime < (timeMax - 1); ++itime)\n                {\n                    timeStamp[itime] = timeStamp[itime + 1];\n                    deltaT = (timeStamp[itime] - timeStamp[0]) / 1000;\n                    for (var imode = modeMin; imode <= modeMax; ++imode)\n                    {\n                        oodataArray[itime * (modeMax - modeMin + 1) + (imode - modeMin)] =\n                        {\n                            'x': oodataArray[(itime + 1) * (modeMax - modeMin + 1) + (imode - modeMin)].x,\n                            'y': deltaT,\n                            'z': oodataArray[(itime + 1) * (modeMax - modeMin + 1) + (imode - modeMin)].z,\n//                            'style': oodataArray[(itime + 1) * (modeMax - modeMin + 1) + (imode - modeMin)].style\n                        };\n                    }\n                }\n                timeStamp[timeMax - 1] = new Date().getTime();\n                deltaT = (timeStamp[timeMax - 1] - timeStamp[0]) / 1000;\n                for (var imode = modeMin; imode <= modeMax; ++imode)\n                {\n                    var value = Math.round(100.0 * Number(spectrumArray[imode])) / 100.0;\n                    if (value < 1.0)  value = 1.0;\n                    value = 20.0 * Math.log10(value / maxAmpScale);\n                    oodataArray[(timeMax - 1) * (modeMax - modeMin + 1) + (imode - modeMin)] =\n                    {\n                        'x': freqArray[imode],\n                        'y': deltaT,\n                        'z': value,\n//                        'style': value\n                    };\n                }\n            }\n            $(\"#startTime\").text(new Date(timeStamp[0]).toLocaleString());\n            $(\"#stopTime\").text(new Date(timeStamp[itimeSlice - 1]).toLocaleString());\n            graph3d.setData(oodataArray);\n        }\n        function freezeRun()\n        {\n            freeze = !freeze;\n            if (freeze)\n            {\n                $(\"#freezeButton\").text('Frozen');\n            }\n            else\n            {\n                $(\"#freezeButton\").text('Running');\n            }\n        }\n        function birdsEyeView()\n        {\n            var horzAngle = 315.0 * 3.1415927 / 180.0;\n            var vertAngle = 45.0 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n            if (sliceViewActive)\n            {\n                timeMax =  birdsEyeTimeMax;   \n                $(\"#plotslices\").val(timeMax.toString());\n            }\n            sliceViewActive = false;\n            birdsEyeViewActive = true;\n            topViewActive = false;\n        }\n        function sliceView()\n        {\n            var horzAngle = 0.0 * 3.1415927 / 180.0;\n            var vertAngle = 0.0 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 1.1});\n            timeMax = 2;\n            $(\"#plotslices\").val(timeMax.toString());\n            oodataArray = [];\n            itimeSlice = 0;\n            initializeDataArray();\n            graph3d.redraw();\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n        }\n        function topView()\n        {\n            var horzAngle = 0 * 3.1415927 / 180.0;\n            var vertAngle = 90 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n            if (sliceViewActive)\n            {\n                timeMax =  birdsEyeTimeMax;   \n                $(\"#plotslices\").val(timeMax.toString());\n            }\n            sliceViewActive = false;\n            birdsEyeViewActive = false;\n            topViewActive = true;\n        }\n        function onCameraPositionChange(event) \n        {\n            if (sliceViewActive) sliceView();\n            if (birdsEyeViewActive) birdsEyeView();\n            if (topViewActive) topView();\n        }\n",
        "output": "str",
        "x": 590,
        "y": 200,
        "wires": [
            [
                "a83f817b.5032b"
            ]
        ]
    },
    {
        "id": "97fab312.6b40a",
        "type": "template",
        "z": "8475ab9.3d26058",
        "name": "html.spectrogram",
        "field": "payload.html.spectrogram",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-3'>\n                        </div>\n                        <div class='col-md-6'>\n                            <p class='card-title'>Spectrogram</p>\n                         </div>\n                        <div class='col-md-3'>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <div class='col-md-12'>\n                                <div class=\"container-fluid spectrogram\" align=\"center\" id=\"spectrogram\"></div>\n                                <div width=\"100%\">\n                                    <div class=\"row\"> \n                                        <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                                            <button class=\"btn jumbotron-button btn-block big-text\" id=\"freezeButton\" type=\"button\" onclick=\"freezeRun()\"></button>\n                                        </div>\n                                        <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                                            <button class=\"btn jumbotron-button btn-block big-text\" id=\"birdsEyeButton\" type=\"button\" onclick=\"birdsEyeView()\">Birds Eye</button>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\"> \n                                        <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                                            <button class=\"btn jumbotron-button btn-block big-text\" id=\"sliceViewButton\" type=\"button\" onclick=\"sliceView()\">Slice View</button>\n                                        </div>\n                                        <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                                            <button class=\"btn jumbotron-button btn-block big-text\" id=\"sliceViewButton\" type=\"button\" onclick=\"topView()\">Top View</button>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\"> \n                                        <div class=\"col-md-3\"  align=\"left\">\n                                            <span class=\"big-text\">Time</span>\n                                        </div>\n                                        <div class=\"col-md-9\">\n                                            <span class=\"big-text\" id=\"stopTime\"></span>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\"> \n                                        <div class=\"col-md-8\" align=\"left\" >\n                                            <span class=\"big-text\">Max. Mode Freq.</span>\n                                        </div>\n                                        <div class=\"col-md-4\">\n                                            <span class=\"big-text\" id=\"maxMode\"></span>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\"> \n                                         <div class=\"col-md-8\" align=\"left\" >\n                                            <span class=\"big-text\">Max. Mode Amp.</span>\n                                        </div>\n                                        <div class=\"col-md-4\">\n                                            <span class=\"big-text\" id=\"maxModeAmplitude\"></span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 830,
        "y": 240,
        "wires": [
            [
                "137901c4.7a7ede"
            ]
        ]
    },
    {
        "id": "45a7d04b.f97db",
        "type": "json",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 1080,
        "wires": [
            [
                "908d7fde.10525"
            ]
        ]
    },
    {
        "id": "9047f741.783b08",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "ultra-ncab/websocket",
        "server": "e6c7842e.bc4f98",
        "client": "",
        "x": 160,
        "y": 1060,
        "wires": [
            [
                "45a7d04b.f97db"
            ]
        ]
    },
    {
        "id": "f62ae826.1bfb58",
        "type": "mqtt in",
        "z": "8475ab9.3d26058",
        "name": "Subscribe Readings",
        "topic": "$(ARCHIVETOPIC)",
        "qos": "0",
        "datatype": "auto",
        "broker": "84d80994.260508",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "ebb8ce.0c3d873"
            ]
        ]
    },
    {
        "id": "ebb8ce.0c3d873",
        "type": "json",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 800,
        "wires": [
            [
                "764116fd.f6e648"
            ]
        ]
    },
    {
        "id": "81c39fe.b208a6",
        "type": "switch",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload.mqttDevice.deviceType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ultra-ncab",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "shiverSim",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 800,
        "wires": [
            [
                "2c85681c.6f9628"
            ],
            [
                "dd585613.72b248"
            ]
        ]
    },
    {
        "id": "764116fd.f6e648",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Check System Sync and Split MQTT topic",
        "func": "if (!global.get('systemClockSynchronized')) return null;\nvar mqttArray = msg.topic.split('/');\nvar device = \n{\n    project     : mqttArray[0],\n    deviceType  : mqttArray[1],\n    name        : mqttArray[2],\n    prop        : mqttArray[3],\n};\nreturn {topic : msg.topic, payload:{topic:'readings', mqttDevice : device, payload:msg.payload}};",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 800,
        "wires": [
            [
                "81c39fe.b208a6"
            ]
        ]
    },
    {
        "id": "908d7fde.10525",
        "type": "switch",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sendSettingToMqtt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getJwtToken",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 1080,
        "wires": [
            [
                "d7ff72cc.e5057"
            ],
            [
                "66a788b4.e432a8"
            ]
        ]
    },
    {
        "id": "d7ff72cc.e5057",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "sendSettingToMqtt",
        "func": "return {\n    topic   : msg.payload.mqttMessage.topic, \n    payload : msg.payload.mqttMessage.payload, \n    token   : msg.payload.token, \n    userID  : msg.payload.userID };\n",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 1080,
        "wires": [
            [
                "1f59a828.f68858"
            ]
        ]
    },
    {
        "id": "66a788b4.e432a8",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "CheckLogin",
        "func": "if (global.get('settingsPassword') == 'NULL')\n{\n    return [null, {topic:'getJwtToken',payload:msg.payload.userID, userID : msg.payload.userID}];    \n}\nif (msg.payload.payload.loginPassword != global.get('settingsPassword'))\n{\n    return [{topic:'getJwtToken', payload:{topic:'getJwtToken', userID:msg.payload.userID, token: null}}, null];\n}\nreturn [null, {topic:'getJwtToken',payload:msg.payload.userID, userID : msg.payload.userID}];",
        "outputs": 2,
        "noerr": 0,
        "x": 690,
        "y": 1180,
        "wires": [
            [
                "439b1d51.6f5e64"
            ],
            [
                "f94738e9.41b828"
            ]
        ]
    },
    {
        "id": "f94738e9.41b828",
        "type": "JsonWebToken",
        "z": "8475ab9.3d26058",
        "name": "get Token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 860,
        "y": 1200,
        "wires": [
            [
                "e6482ef3.6b5a9"
            ]
        ]
    },
    {
        "id": "e6482ef3.6b5a9",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Send Token",
        "func": "return {topic:'getJwtToken', payload:{topic:'getJwtToken', userID:msg.userID, token: msg.token}};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1010,
        "y": 1200,
        "wires": [
            [
                "439b1d51.6f5e64"
            ]
        ]
    },
    {
        "id": "c7035bb0.5180c8",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "demo-1 socket",
        "links": [
            "439b1d51.6f5e64",
            "c7477c59.bb2cf",
            "2c85681c.6f9628"
        ],
        "x": 1055,
        "y": 760,
        "wires": [
            [
                "aa54395e.1b6888"
            ]
        ]
    },
    {
        "id": "2c85681c.6f9628",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "App Subscribe Readings 1",
        "links": [
            "c7035bb0.5180c8"
        ],
        "x": 915,
        "y": 760,
        "wires": []
    },
    {
        "id": "439b1d51.6f5e64",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "App Check Login",
        "links": [
            "5e98ed1e.d1c5b4",
            "6eee5bd4.f602e4",
            "a9e05c69.66345",
            "c7035bb0.5180c8"
        ],
        "x": 1115,
        "y": 1160,
        "wires": []
    },
    {
        "id": "1f59a828.f68858",
        "type": "JsonWebToken",
        "z": "8475ab9.3d26058",
        "name": "decrypt Token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 900,
        "y": 1100,
        "wires": [
            [
                "3506b658.01b13a"
            ]
        ]
    },
    {
        "id": "3506b658.01b13a",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Check Token",
        "func": "if (Number(msg.token) == msg.userID)\n{\n    return [msg, {topic : 'acknowledge', payload:{topic:'settingAcknowledge', payload: 'Success!', userID : msg.userID}}]\n}\nreturn [null, {topic : 'acknowledge', payload:{topic:'settingAcknowledge', payload: 'Bad token', userID : msg.userID}}];",
        "outputs": 2,
        "noerr": 0,
        "x": 1070,
        "y": 1100,
        "wires": [
            [
                "2132a017.ba23f",
                "ee0ee61b.770a18"
            ],
            [
                "439b1d51.6f5e64"
            ]
        ]
    },
    {
        "id": "2132a017.ba23f",
        "type": "mqtt out",
        "z": "8475ab9.3d26058",
        "name": "Publish Setting",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "84d80994.260508",
        "x": 1340,
        "y": 1100,
        "wires": []
    },
    {
        "id": "3a38071f.ae4798",
        "type": "subflow:8341090a.df9758",
        "z": "8475ab9.3d26058",
        "name": "",
        "x": 1130,
        "y": 320,
        "wires": []
    },
    {
        "id": "8ab90f8d.446f1",
        "type": "http in",
        "z": "8475ab9.3d26058",
        "name": "/",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 40,
        "wires": [
            [
                "e189dffb.c81e7"
            ]
        ]
    },
    {
        "id": "5cac58c2.05a888",
        "type": "template",
        "z": "8475ab9.3d26058",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div class='container' width=\"100%\">\n        <div class='row vert-pad' >\n            <div class='col-md-12' align='center' >\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/ultra-ncab?name=001\" >Ultra Ncab 001</a>\n            </div>\n        </div>\n       <div class='row vert-pad' >\n            <div class='col-md-12' align='center' >\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/shiverSim?name=001\" >Shiver Simulator 001</a> \n            </div>\n        </div>\n        <div class='row vert-pad' >\n            <div class='col-md-12' align='center' >\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/core\" id=\"blinky-lite-core\">Blinky-Lite Controlbox 01</a> \n            </div>\n        </div>\n        <div class='row vert-pad' >\n            <div class='col-md-12' align='center' >\n                <iframe src=\"https://shiftr.io/Blinky-Lite/ultra-ncab/embed?zoom=1\" width=\"700\" height=\"500\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\n                <p>Ultra Ncab MQTT Broker</p>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 510,
        "y": 40,
        "wires": [
            [
                "9084c864.67af98"
            ]
        ]
    },
    {
        "id": "40f15d2e.87d194",
        "type": "template",
        "z": "8475ab9.3d26058",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Ultra Ncab",
        "output": "str",
        "x": 390,
        "y": 40,
        "wires": [
            [
                "5cac58c2.05a888"
            ]
        ]
    },
    {
        "id": "e189dffb.c81e7",
        "type": "template",
        "z": "8475ab9.3d26058",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 250,
        "y": 40,
        "wires": [
            [
                "40f15d2e.87d194"
            ]
        ]
    },
    {
        "id": "9084c864.67af98",
        "type": "subflow:8341090a.df9758",
        "z": "8475ab9.3d26058",
        "name": "",
        "x": 650,
        "y": 40,
        "wires": []
    },
    {
        "id": "7e50c6f8.b2b708",
        "type": "debug",
        "z": "e17f7487.2a78e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 850,
        "y": 300,
        "wires": []
    },
    {
        "id": "347f36fe.94ed7a",
        "type": "function",
        "z": "e13648d6.d698c8",
        "name": "Setup accessLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n    } \n};\nvar queryFilter = \n{\n    userID: msg.userID\n}\nvar settingLogEntry = {topic:msg.topic, userID: msg.userID, device:msg.payload, timeStamp: new Date().getTime()};\nvar newMsg = \n{\n    topic           : 'getAccessLog',\n    payload         : [queryFilter, projectionFilter],\n    settingLogEntry : settingLogEntry\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 160,
        "wires": [
            [
                "e24c42fb.5b61a"
            ]
        ]
    },
    {
        "id": "e24c42fb.5b61a",
        "type": "mongodb3 in",
        "z": "e13648d6.d698c8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "findOne",
        "x": 500,
        "y": 160,
        "wires": [
            [
                "c006fe2c.abbb1"
            ]
        ]
    },
    {
        "id": "c006fe2c.abbb1",
        "type": "function",
        "z": "e13648d6.d698c8",
        "name": "setup settingLogEntry",
        "func": "var settingLogEntry = \n{\n    topic       :   msg.settingLogEntry.topic, \n    userID      :   msg.settingLogEntry.userID,\n    device      :   msg.settingLogEntry.device,\n    timeStamp   :   msg.settingLogEntry.timeStamp,\n    ipInfo      :   msg.payload\n}\nreturn {topic: 'settingLogEntry', payload: settingLogEntry};",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 160,
        "wires": [
            [
                "9c60f57c.b85078"
            ]
        ]
    },
    {
        "id": "9c60f57c.b85078",
        "type": "mongodb3 in",
        "z": "e13648d6.d698c8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "insertOne",
        "x": 990,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "ee0ee61b.770a18",
        "type": "subflow:e13648d6.d698c8",
        "z": "8475ab9.3d26058",
        "x": 1330,
        "y": 1160,
        "wires": []
    },
    {
        "id": "2e134ccf.236a14",
        "type": "subflow:e13648d6.d698c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 1310,
        "y": 560,
        "wires": []
    },
    {
        "id": "b9df3f26.ab53f",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.html.websocket}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>",
        "output": "str",
        "x": 1150,
        "y": 40,
        "wires": [
            [
                "d1d9e12b.926ff"
            ]
        ]
    },
    {
        "id": "895ba39c.86e59",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Foot",
        "field": "payload.foot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div id=\"acknowledgeDialog\" title=\"Acknowledge\" class='card'>\n        <p class='card-title' id='acknowledgeDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='acknowledgeDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"optionDialog\" title=\"Option\" class='card'>\n        <p class='card-title' id='optionDialogTitle'>Choice</p>\n        <div class='card-body'>\n            <p class='tableText' id='optionDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"messageDialog\" title=\"Message\" class='card'>\n        <p class='card-title' id='messageDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='messageDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"loginDialog\" title=\"Login\" class='card'>\n        <div class='card-body'>\n            <table>\n                <tr>\n                    <td width=\"50%\" align=\"left\"><span class=\"tableText\">Password</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control tableText\" id=\"loginPassword\" type=\"password\" value=\"\" /></td>\n                </tr>\n           </table>\n        </div>\n    </div>    \n    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>",
        "output": "str",
        "x": 690,
        "y": 40,
        "wires": [
            [
                "a9a62959.7c01e8"
            ]
        ]
    },
    {
        "id": "aa17ff35.7cdfd",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Head",
        "field": "payload.head",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/visDist/vis.js\"></script>\n    <style>\n{{{payload.css}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>",
        "output": "str",
        "x": 570,
        "y": 40,
        "wires": [
            [
                "895ba39c.86e59"
            ]
        ]
    },
    {
        "id": "d1d9e12b.926ff",
        "type": "http response",
        "z": "ca529822.9112f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 40,
        "wires": []
    },
    {
        "id": "c4ed2505.8c07e8",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Utility Scripts",
        "field": "payload.utilityScripts",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var userID = -1;\n        var useWebSocketsFlag = true;\n        var projectName = '{{{payload.projectname}}}';\n        var heartBeatImage = false;\n        var wsUri = '';\n\n        function useWebSockets(webSocketsFlag)\n        {\n            useWebSocketsFlag = webSocketsFlag;\n        }\n        function wsConnectC()\n        {\n            if (!useWebSocketsFlag)\n            {\n                return;\n            }\n            if (wsUri.length < 1)\n            {\n                var uri = window.location.href.split('://');\n                var wslead = 'ws://';\n                if (uri[0] == 'https') wslead = 'wss://';\n                var questionLocation = uri[1].indexOf('?');\n                if (questionLocation >= 0)\n                {\n                    uri[1] = uri[1].substring(0,questionLocation);\n//                    console.log(uri[1]);\n                }\n                if (uri[1].indexOf('/') < (uri[1].length - 1))\n                {\n                    wsUri = wslead + uri[1] + '/websocket';\n                }\n                else\n                {\n                    wsUri = wslead + uri[1] + 'websocket';\n                }\n            }\n            ws = new WebSocket(wsUri);\n            ws.onmessage = function(event)\n            {\n                onWebSocketMessage(JSON.parse(event.data));\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                $('#webSocketStatus').html('Open');\n                $('#reOpenWebSocketButton').hide();\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n                onWebSocketOpen();\n            };\n            ws.onclose = function()\n            {\n                console.log(\"Websocket closed\");\n                $('#webSocketStatus').html('Closed');\n                $('#reOpenWebSocketButton').show();\n                $('#webSocketStatusCard').show();\n                $('#webSocketStatusRow').css('padding-bottom','25px');\n                onWebSocketClose();\n            };\n        }\n        function sendWebSocketMessageObject(message)\n        {\n            ws.send(JSON.stringify(message));\n        }\n\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        $( document ).ready(function()\n        {\n            loginDialog(\"close\");\n//            userID  = getRandomInt(32768);\n            userID  = {{{payload.userID}}};\n            if (!useWebSocketsFlag)\n            {\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n            }\n            wsConnectC();\n            onDocumentReady();\n            if ({{{payload.setServerTimeFlag}}})\n            {\n                var windowLocation = window.location.href\n                if (window.location.href.indexOf('/setServerTime') < 0) \n                {\n                    window.location.replace('/setServerTime?parentRef=' + windowLocation);\n                }\n            }\n        });\n        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n            $( \"#messageDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:[]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }\n        function messageDialog(headerText, title, text)\n        {\n            $( \"#messageDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#messageDialogTitle\" ).html(title);\n            $( \"#messageDialogText\" ).html(text);\n            $( \"#messageDialog\" ).dialog( \"open\" );\n        }\n        var jwtToken = '';\n        var loginCallback = null;\n        var loginCallbackInfo = null;\n        function checkLogin(callback, callbackInfo)\n        {\n            if (jwtToken.length > 0) return callback(callbackInfo);\n            loginDialog(\"open\", callback, callbackInfo);\n        }\n        function loadJwtToken(data)\n        {\n            if (data.token == null)\n            {\n                acknowledgeDialog('Error', 'Login', 'Denied');\n            }\n            else\n            {\n                jwtToken = data.token;\n                loginCallback(loginCallbackInfo);\n            }\n        }\n        function loginDialog(action, callback, callbackInfo) \n        {\n            $( \"#loginDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Login\",\n                            click: function() \n                            {\n                                ws.send(JSON.stringify(\n                                {\n                                    topic       : 'getJwtToken',\n                                    payload     : \n                                    {\n//                                        loginUser       : $('#loginUser').val(),\n                                        loginPassword   : $('#loginPassword').val()\n                                    },\n                                    'userID'    : userID,\n                                }));\n                                loginCallback = callback;\n                                loginCallbackInfo = callbackInfo;\n                                $( this ).dialog( \"close\" );\n                            },\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        }\n                    ]\n                });\n            $( \"#loginDialog\" ).dialog(action);\n        }\n        function sendSettingToMqtt(mqttMessage)\n        {\n            var socketMessage = \n            {\n                topic       : 'sendSettingToMqtt',\n                mqttMessage : mqttMessage,\n                token       : jwtToken,\n                userID      : userID\n            };\n            sendWebSocketMessageObject({topic : 'sendSettingToMqtt', mqttMessage : mqttMessage, token : jwtToken, userID : userID});\n        }\n        function heartbeat()\n        {\n            heartBeatImage = !heartBeatImage;\n            var heartBeatImageSrc = '/img/heartRed.png';\n            if (heartBeatImage) heartBeatImageSrc = '/img/heartPink.png';\n            $('#heartBeatID').attr('src',heartBeatImageSrc);\n        }\n",
        "output": "str",
        "x": 430,
        "y": 40,
        "wires": [
            [
                "aa17ff35.7cdfd"
            ]
        ]
    },
    {
        "id": "99bb1519.85fc18",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "Get project name and userID",
        "func": "function getRandomInt(max)\n{\n  return Math.floor(Math.random() * Math.floor(max));\n}\nmsg.payload['projectname'] = global.get('projectName')\nmsg.payload['userID'] = getRandomInt(32768);\nmsg.payload['setServerTimeFlag'] = !global.get('systemClockSynchronized');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 220,
        "y": 40,
        "wires": [
            [
                "c4ed2505.8c07e8"
            ]
        ]
    },
    {
        "id": "e87e796a.685178",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "IP filter",
        "func": "var ipfilter = [\n    \"127.0.0.16\"];\nvar ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nif (ipAddress==undefined) return null;\nvar ipAddressSplit = ipAddress.split(\".\");\nfor (var ii =  0; ii < ipfilter.length; ++ii)\n{\n    var ipfilterSplit = ipfilter[ii].split(\".\");\n    if (ipAddress == ipfilter[ii])\n    { \n        node.warn('Booger');\n        return null;\n    }\n    if (ipfilterSplit[2] == '*')\n    {\n        if ((ipfilterSplit[0] == ipAddressSplit[0]) && (ipfilterSplit[1] == ipAddressSplit[1]))\n        {\n            return null;\n        }\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 40,
        "wires": [
            [
                "b9df3f26.ab53f",
                "fe4fcd1f.16e39"
            ]
        ]
    },
    {
        "id": "fe4fcd1f.16e39",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "ClientInfo",
        "func": "var ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nvar url = msg.req.url;\nreturn {\n    topic:'clientInfo', \n    payload:{\n        ipAddress   : ipAddress\n    },\n    extraInfo       : {url:url, userID:msg.payload.userID},\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 100,
        "wires": [
            [
                "8382c3d.0aeea4"
            ]
        ]
    },
    {
        "id": "8382c3d.0aeea4",
        "type": "http request",
        "z": "ca529822.9112f8",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "https://tools.keycdn.com/geo.json?host={{{payload.ipAddress}}}",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 1130,
        "y": 140,
        "wires": [
            [
                "d0cd3f7.e986fc"
            ]
        ]
    },
    {
        "id": "d0cd3f7.e986fc",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "parseIpRequest",
        "func": "var data = msg.payload.data.geo;\ndata['url'] = msg.extraInfo.url;\ndata['userID'] = msg.extraInfo.userID;\ndata['timeStamp'] = new Date().getTime();\nreturn {topic:'ipData', payload:data};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1140,
        "y": 180,
        "wires": [
            [
                "b7f38426.fa6658"
            ]
        ]
    },
    {
        "id": "a9a62959.7c01e8",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "html.websocket",
        "field": "payload.html.websocket",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- websocket status HTML -->\n    <div width=\"100%\">\n        <div class='row' id='webSocketStatusRow' style='padding-bottom: 0px;'>\n            <div class='col-md-12' align='center'>\n\n                <div class='card' id='webSocketStatusCard' >\n                    <p class='card-title'>Web Socket Status</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Websocket Status</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn card-button btn-block big-text' id='reOpenWebSocketButton' onclick=\"wsConnectC()\">Re-open</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='webSocketStatus' >Closed</span>\n                                   </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 840,
        "y": 40,
        "wires": [
            [
                "e87e796a.685178"
            ]
        ]
    },
    {
        "id": "b7f38426.fa6658",
        "type": "mongodb3 in",
        "z": "ca529822.9112f8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "insertOne",
        "x": 1190,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "275c08.dff3c3f8",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/core",
        "url": "/core",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "f1353403.af8cb8"
            ]
        ]
    },
    {
        "id": "59315144.42ea4",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div class='container' width=\"100%\">\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarPlotter\" >Scalar Plotter</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarArchivePlotter\" >Scalar Archive Plotter</a>\n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarViewer\" >Scalar Viewer</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarAlarmScanner\" >Scalar Alarm Scanner</a> \n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/vectorPlotter\" >Vector Plotter</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/vectorArchivePlotter\" >Vector Archive Plotter</a>\n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/access-log\" >Access Log</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/settings-log\" >Settings Log</a>\n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-12' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/\" >Custom App Index</a> \n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 390,
        "y": 60,
        "wires": [
            [
                "a9d47de1.dae3f"
            ]
        ]
    },
    {
        "id": "a9d47de1.dae3f",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky-Lite Core",
        "output": "str",
        "x": 510,
        "y": 60,
        "wires": [
            [
                "1e988252.38bf7e"
            ]
        ]
    },
    {
        "id": "f1353403.af8cb8",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 250,
        "y": 60,
        "wires": [
            [
                "59315144.42ea4"
            ]
        ]
    },
    {
        "id": "2666eb47.cb2c24",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/access-log",
        "url": "/access-log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "3836124.ae654ee"
            ]
        ]
    },
    {
        "id": "c41bff2c.e8b63",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div id='querySetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td align=\"center\">\n                            <span>Start Date</span>\n                        </td>\n                        <td align=\"center\">\n                            <span>Stop Date</span>\n                        </td>\n                        <td align=\"center\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n                <table width='100%' id='accessLogTable'>\n                    <thead>\n                        <tr>\n                            <th width='10%'>url</th>\n                            <th width='10%'>ip</th>\n                            <th width='7%' >country</th>\n                            <th width='6%' >region</th>\n                            <th width='7%' >city</th>\n                            <th width='20%'>rdns</th>\n                            <th width='10%'>isp</th>\n                            <th width='10%'>timezone</th>\n                            <th width='10%'>datetime</th>\n                        </tr>\n                    </thead>\n                    <tbody id=\"accessLogTableBody\"></tbody>\n                </table>\n            </div>\n       </div>\n    </div>\n",
        "output": "str",
        "x": 430,
        "y": 120,
        "wires": [
            [
                "56402369.244bec"
            ]
        ]
    },
    {
        "id": "56402369.244bec",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Access Log",
        "output": "str",
        "x": 550,
        "y": 120,
        "wires": [
            [
                "e4c1258f.54e248"
            ]
        ]
    },
    {
        "id": "3836124.ae654ee",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(true);\n        function onDocumentReady()\n        {\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getAccessLog':\n                        displayData(msg);\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function getData()\n        {\n            var startDate = new Date($( \"#startDate\" ).val()).getTime();\n            var stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            $(\"#accessLogTableBody\").remove();\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getAccessLog',\n                    userID      : userID,\n                    startDate   : startDate,\n                    stopDate    : stopDate,\n                });\n            \n        }\n        function displayData(msg)\n        {\n            var markup = '<tbody id=\"accessLogTableBody\">';\n            for (var ii = 0; ii < msg.payload.length; ++ii)\n            {\n                markup = markup + addRow(msg.payload[ii]);\n            }\n            markup = markup + '</tbody>';\n            $(\"#accessLogTable\").append(markup);\n        }\n\n        function addRow(record)\n        {\n            var markup = '<tr>';\n            markup = markup + '<td>' + record.url + '</td>';\n            markup = markup + '<td>' + record.ip + '</td>';\n            markup = markup + '<td>' + record.country + '</td>';\n            markup = markup + '<td>' + record.region + '</td>';\n            markup = markup + '<td>' + record.city + '</td>';\n            markup = markup + '<td>' + record.rdns + '</td>';\n            markup = markup + '<td>' + record.isp + '</td>';\n            markup = markup + '<td>' + record.timezone + '</td>';\n            markup = markup + '<td>' + record.datetime + '</td>';\n            markup = markup + '</tr>';\n            return markup;\n            \n        }\n",
        "output": "str",
        "x": 290,
        "y": 120,
        "wires": [
            [
                "c41bff2c.e8b63"
            ]
        ]
    },
    {
        "id": "47b50e0.c7354f4",
        "type": "websocket in",
        "z": "90f83725.6dae08",
        "name": "/access-log/websocket",
        "server": "47794345.2e8b8c",
        "client": "",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "adfb1983.8d4b08"
            ]
        ]
    },
    {
        "id": "adfb1983.8d4b08",
        "type": "json",
        "z": "90f83725.6dae08",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 200,
        "wires": [
            [
                "b9aba820.9dbf78"
            ]
        ]
    },
    {
        "id": "b9aba820.9dbf78",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Setup AccessLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id : 0, \n    } \n};\nvar queryFilter = \n{\n    timeStamp :\n    {\n        $gte: msg.payload.startDate,\n        $lte: msg.payload.stopDate\n    }\n}\nvar newMsg = \n{\n    topic           : 'getAccessLog',\n    userID          : msg.payload.userID,\n    payload         : [queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 200,
        "wires": [
            [
                "aef63175.9e1f7"
            ]
        ]
    },
    {
        "id": "aef63175.9e1f7",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "find.toArray",
        "x": 780,
        "y": 200,
        "wires": [
            [
                "c60d9fa2.da0d4"
            ]
        ]
    },
    {
        "id": "c60d9fa2.da0d4",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.device.name,\n        payload:{\n            topic           : 'getAccessLog',\n            payload         : null,\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\n\nreturn {\n    payload:{\n        topic           : 'getAccessLog',\n        payload         : records,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 200,
        "wires": [
            [
                "7a08c826.6c9ca8"
            ]
        ]
    },
    {
        "id": "7a08c826.6c9ca8",
        "type": "websocket out",
        "z": "90f83725.6dae08",
        "name": "/access-log/websocket",
        "server": "47794345.2e8b8c",
        "client": "",
        "x": 1240,
        "y": 200,
        "wires": []
    },
    {
        "id": "7db6e983.ea0948",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/settings-log",
        "url": "/settings-log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "3ff05971.6144b6"
            ]
        ]
    },
    {
        "id": "207a1450.67f23c",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div id='querySetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td align=\"center\">\n                            <span>Start Date</span>\n                        </td>\n                        <td align=\"center\">\n                            <span>Stop Date</span>\n                        </td>\n                        <td align=\"center\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n                <table width='100%' id='settingsLogTable'>\n                    <thead>\n                        <tr>\n                            <th width='10%' >url</th>\n                            <th width='10%' >device</th>\n                            <th width='10%' >ip</th>\n                            <th width='7%'  >country</th>\n                            <th width='6%'  >region</th>\n                            <th width='7%'  >city</th>\n                            <th width='20%' >rdns</th>\n                            <th width='10%' >isp</th>\n                            <th width='10%' >timezone</th>\n                            <th width='10%' >datetime</th>\n                        </tr>\n                    </thead>\n                    <tbody id=\"settingsLogTableBody\"></tbody>\n                </table>\n            </div>\n       </div>\n   </div>\n    <div id=\"showDeviceDialog\" title=\"Device\" class='card'>\n        <p class='card-title' id='showDeviceDialogName'>Device</p>\n        <div class='card-body'>\n            <table id='showDeviceTable' width='100%'>\n                <thead>\n                    <tr>\n                        <th width='50%' >Attribute</th>\n                        <th width='50%' >Value</th>\n                    </tr>\n                </thead>\n                <tbody id=\"showDeviceTableBody\"></tbody>\n            </table>\n        </div>\n    </div>  ",
        "output": "str",
        "x": 430,
        "y": 280,
        "wires": [
            [
                "c3c60f3c.51f22"
            ]
        ]
    },
    {
        "id": "c3c60f3c.51f22",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Settings Log",
        "output": "str",
        "x": 550,
        "y": 280,
        "wires": [
            [
                "1f057b8c.e3a574"
            ]
        ]
    },
    {
        "id": "78d16800.4adc18",
        "type": "websocket in",
        "z": "90f83725.6dae08",
        "name": "/settings-log/websocket",
        "server": "fcd0f0f1.e1a0f",
        "client": "",
        "x": 160,
        "y": 360,
        "wires": [
            [
                "61089c8b.87fe94"
            ]
        ]
    },
    {
        "id": "61089c8b.87fe94",
        "type": "json",
        "z": "90f83725.6dae08",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "8d3e512a.420f"
            ]
        ]
    },
    {
        "id": "8d3e512a.420f",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Setup AccessLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id : 0, \n    } \n};\nvar queryFilter = \n{\n    timeStamp :\n    {\n        $gte: msg.payload.startDate,\n        $lte: msg.payload.stopDate\n    }\n}\nvar newMsg = \n{\n    topic           : 'getSettingsLog',\n    userID          : msg.payload.userID,\n    payload         : [queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 360,
        "wires": [
            [
                "ce493245.30ca8"
            ]
        ]
    },
    {
        "id": "ce493245.30ca8",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "find.toArray",
        "x": 780,
        "y": 360,
        "wires": [
            [
                "e1eb29b.c5c23d8"
            ]
        ]
    },
    {
        "id": "e1eb29b.c5c23d8",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.device.name,\n        payload:{\n            topic           : 'getSettingsLog',\n            payload         : null,\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\n\nreturn {\n    payload:{\n        topic           : 'getSettingsLog',\n        payload         : records,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 360,
        "wires": [
            [
                "89be3294.49e69"
            ]
        ]
    },
    {
        "id": "89be3294.49e69",
        "type": "websocket out",
        "z": "90f83725.6dae08",
        "name": "/settings-log/websocket",
        "server": "fcd0f0f1.e1a0f",
        "client": "",
        "x": 1250,
        "y": 360,
        "wires": []
    },
    {
        "id": "3ff05971.6144b6",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var settingsHistory = null;\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getSettingsLog':\n                        settingsHistory = msg.payload;\n                        displayData();\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function getData()\n        {\n            var startDate = new Date($( \"#startDate\" ).val()).getTime();\n            var stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            settingsHistory = null;\n            $(\"#settingsLogTableBody\").remove();\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getSettingsLog',\n                    userID      : userID,\n                    startDate   : startDate,\n                    stopDate    : stopDate,\n                });\n            \n        }\n        function displayData()\n        {\n            var markup = '<tbody id=\"settingsLogTableBody\">';\n            for (var ii = 0; ii < settingsHistory.length; ++ii)\n            {\n                markup = markup + addRow(ii);\n            }\n            markup = markup + '</tbody>';\n            $(\"#settingsLogTable\").append(markup);\n        }\n\n        function addRow(ii)\n        {\n            var markup = '<tr>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.url + '</td>';\n            markup = markup + '<td>' \n                +  '<button onclick=\"displayDevice(' + ii.toString() + ')\">' + settingsHistory[ii].device.deviceType  + '-' + settingsHistory[ii].device.name + '</button>' \n                + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.ip + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.country + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.region + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.city + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.rdns + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.isp + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.timezone + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.datetime + '</td>';\n            markup = markup + '</tr>';\n            return markup;\n            \n        }\n        function displayDevice(index)\n        {\n            console.log(index);\n            var time = new Date(settingsHistory[index].timeStamp).toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', '');\n\n            $( \"#showDeviceDialogName\" ).html(settingsHistory[index].device.name + ' ' + time);\n            $( \"#showDeviceTableBody\" ).remove();\n            var markup = '<tbody id=\"showDeviceTableBody\">';\n\n            for (var ii = 0; ii < settingsHistory[index].device.settings.length; ++ii)\n            {\n                markup = markup +'<tr>';\n                markup = markup + '<td align=\"left\">' + settingsHistory[index].device.settings[ii].attr + '</td>';\n                markup = markup + '<td>' + settingsHistory[index].device.settings[ii].value.toString() + '</td>';\n                markup = markup + '</tr>';\n            }\n            markup = markup + '</tbody>';\n            $(\"#showDeviceTable\").append(markup);\n\n            $( \"#showDeviceDialog\" ).dialog( \"option\", \"title\", \"Device Setting\"); \n            $( \"#showDeviceDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#showDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Close\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n",
        "output": "str",
        "x": 290,
        "y": 280,
        "wires": [
            [
                "207a1450.67f23c"
            ]
        ]
    },
    {
        "id": "4140c1ee.dca18",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 700,
        "wires": [
            [
                "8bfd61eb.0f8f1"
            ]
        ]
    },
    {
        "id": "8bfd61eb.0f8f1",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "remove 127.0.0.1 from settings log",
        "func": "var queryFilter = \n{\n    'ipInfo.ip' : '127.0.0.1'\n}\nvar newMsg = \n{\n    topic           : 'remove127',\n    payload         : [queryFilter, null],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 700,
        "wires": [
            [
                "f7ff007a.8d8b"
            ]
        ]
    },
    {
        "id": "f7ff007a.8d8b",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "findAndRemove",
        "x": 710,
        "y": 700,
        "wires": [
            [
                "ab1257ae.74fda8"
            ]
        ]
    },
    {
        "id": "ab1257ae.74fda8",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 940,
        "y": 700,
        "wires": []
    },
    {
        "id": "79a0dc4b.21aaa4",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 780,
        "wires": [
            [
                "d3d9bc03.02e38"
            ]
        ]
    },
    {
        "id": "d3d9bc03.02e38",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "remove 127.0.0.1 from access log",
        "func": "var queryFilter = \n{\n    'ip' : '127.0.0.1'\n}\nvar newMsg = \n{\n    topic           : 'remove127',\n    payload         : [queryFilter, null],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 780,
        "wires": [
            [
                "7ffae9ab.87bee8"
            ]
        ]
    },
    {
        "id": "7ffae9ab.87bee8",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "findAndRemove",
        "x": 710,
        "y": 780,
        "wires": [
            [
                "35a0f533.d24c2a"
            ]
        ]
    },
    {
        "id": "35a0f533.d24c2a",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 940,
        "y": 780,
        "wires": []
    },
    {
        "id": "1e988252.38bf7e",
        "type": "subflow:f22a539a.a67b3",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 650,
        "y": 60,
        "wires": []
    },
    {
        "id": "e4c1258f.54e248",
        "type": "subflow:f22a539a.a67b3",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 690,
        "y": 120,
        "wires": []
    },
    {
        "id": "1f057b8c.e3a574",
        "type": "subflow:f22a539a.a67b3",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 690,
        "y": 280,
        "wires": []
    },
    {
        "id": "19231a1a.0ae266",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Create shiverSim Database entry",
        "func": "var device = \n{\n    name        : '001',\n    deviceType  : 'shiverSim',\n    arcPeriod   : 60000,\n    timeStamp   : 0,\n    lastArchive : 0,\n    readings    : \n    [ \n        { attr : 'linkQuality', type : 'scalar',    value : 0,  unit : '/70',   alarm : {value : 0, limits: {lolo :  30,    low : 40,    high : 71,       hihi : 80    }, notify:{name:'', number:'', time:0} } },\n        { attr : 'signalLevel', type : 'scalar',    value : 0,  unit : 'dBm',   alarm : {value : 0, limits: {lolo : -70,    low : -60,   high : 0,        hihi : 30    }, notify:{name:'', number:'', time:0} } }\n    ],\n    settings    :\n    [ \n        { attr : 'motor-direction',  type : 'scalar',    value : 1,    unit : 'unit',  alarm : {value : 0, limits: {lolo : -1,      low : -1,     high : 2,      hihi : 2   }, notify:{name:'', number:'', time:0} } },\n        { attr : 'motor-on',         type : 'scalar',    value : 0,    unit : 'unit',  alarm : {value : 0, limits: {lolo : -1,      low : -1,     high : 2,      hihi : 2   }, notify:{name:'', number:'', time:0} } },\n        { attr : 'motor-speed',      type : 'scalar',    value : 160,  unit : 'unit',  alarm : {value : 0, limits: {lolo : 99,      low : 99,     high : 221,    hihi : 222 }, notify:{name:'', number:'', time:0} } }\n    ]\n};\nreturn {topic:'shiverSim-01',payload:device};\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 960,
        "wires": [
            [
                "194e0a53.8d5cd6"
            ]
        ]
    },
    {
        "id": "c337c4d4.9e4258",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 960,
        "wires": [
            [
                "19231a1a.0ae266"
            ]
        ]
    },
    {
        "id": "77c20def.ce8aa4",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Update shiverSim Database entry with MQTT",
        "func": "var device = \n{\n    name        : '001',\n    deviceType  : 'shiverSim',\n    arcPeriod   : 60000,\n    timeStamp   : 0,\n    lastArchive : 0,\n    readings    : \n    [ \n        { attr : 'linkQuality', type : 'scalar',    value : 0,  unit : '/70',   alarm : {value : 0, limits: {lolo :  30,    low : 40,    high : 71,       hihi : 80    }, notify:{name:'', number:'', time:0} } },\n        { attr : 'signalLevel', type : 'scalar',    value : 0,  unit : 'dBm',   alarm : {value : 0, limits: {lolo : -70,    low : -60,   high : 0,        hihi : 30    }, notify:{name:'', number:'', time:0} } }\n    ],\n    settings    :\n    [ \n        { attr : 'motor-direction',  type : 'scalar',    value : 1,    unit : 'unit',  alarm : {value : 0, limits: {lolo : -1,      low : -1,     high : 2,      hihi : 2   }, notify:{name:'', number:'', time:0} } },\n        { attr : 'motor-on',         type : 'scalar',    value : 0,    unit : 'unit',  alarm : {value : 0, limits: {lolo : -1,      low : -1,     high : 2,      hihi : 2   }, notify:{name:'', number:'', time:0} } },\n        { attr : 'motor-speed',      type : 'scalar',    value : 160,  unit : 'unit',  alarm : {value : 0, limits: {lolo : 99,      low : 99,     high : 221,    hihi : 222 }, notify:{name:'', number:'', time:0} } }\n    ]\n};\nreturn {topic:'BrainCool/shiverSim/001/setting', payload:device};",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 1100,
        "wires": [
            [
                "f2a0c42e.7c1d68"
            ]
        ]
    },
    {
        "id": "e1bc1eaa.b15fc",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 1100,
        "wires": [
            [
                "77c20def.ce8aa4"
            ]
        ]
    },
    {
        "id": "86c59754.260268",
        "type": "template",
        "z": "8475ab9.3d26058",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.control}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 1230,
        "y": 580,
        "wires": [
            [
                "cd62d45f.e79408"
            ]
        ]
    },
    {
        "id": "82baaa16.c743b8",
        "type": "template",
        "z": "8475ab9.3d26058",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n",
        "output": "str",
        "x": 770,
        "y": 580,
        "wires": [
            [
                "da46536a.03e36"
            ]
        ]
    },
    {
        "id": "fe8f260e.b76e48",
        "type": "http in",
        "z": "8475ab9.3d26058",
        "name": "/shiverSim",
        "url": "/shiverSim",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 580,
        "wires": [
            [
                "4277ca07.739f14"
            ]
        ]
    },
    {
        "id": "41fa8d81.f31114",
        "type": "template",
        "z": "8475ab9.3d26058",
        "name": "Title 1",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Shiver Box {{{payload.script.name}}}",
        "output": "str",
        "x": 410,
        "y": 580,
        "wires": [
            [
                "3e073000.e791a"
            ]
        ]
    },
    {
        "id": "3e073000.e791a",
        "type": "template",
        "z": "8475ab9.3d26058",
        "name": "Global Javascript",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n        useWebSockets(true);\n        var motorSpeedSliderMoved = false;\n        function onDocumentReady()\n        {\n            $( function() \n            {\n                $( \"#motorSpeedSlider\" ).slider(\n                    {\n                        stop    :   function( event, ui ) \n                                    {\n                                        if (mqttDevice == null) return;\n                                        $('#motorSpeed').hide();\n                                        var motorSpeedValue = Math.round(2.0 * ui.value) + 100;\n                                        var motorSpeedSetting = getAttrObject( 'settings', 'motor-speed');\n                                        motorSpeedSetting.value = motorSpeedValue;\n                                        \n                                        var mqttMessage = \n                                        {\n                                            topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                                            payload :  device\n                                        };\n                                        checkLogin(sendSettingToMqtt, mqttMessage);\n                            \n                                        setTimeout(function()\n                                        {\n                                            motorSpeedSliderMoved = false; \n                                            $('#motorSpeed').show();\n                                        }, 1500);\n                                        \n                                    },\n                        start   :   function( event, ui ){motorSpeedSliderMoved = true},\n                    });\n            } );\n            $(\"#motorSpeedSlider\").children(\"div\").css(\"background\",\"red\");\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.mqttDevice.name == restfulDevice.name)\n                    {\n                        heartbeat();\n                        device = msg.payload;\n                        mqttDevice = msg.mqttDevice;\n                        $('#linkQualityId').text(getAttrObject('readings', 'linkQuality').value);\n                        $('#signalLevelId').text(getAttrObject('readings', 'signalLevel').value);\n                        if (!motorSpeedSliderMoved)\n                        {   \n                            var motorSpeed = getAttrObject('settings', 'motor-speed').value;\n                            $('#motorSpeed').text(Math.round(motorSpeed * 0.1638 - 6) + ' Hz');\n                            $('#motorSpeedSlider' ).slider( \"value\", Math.round((motorSpeed - 100) / 2.0) );\n                        }\n                        var motorOn = getAttrObject('settings', 'motor-on').value;\n                        if (motorOn == 0)\n                        {\n                            $('#motorOffButton').css('color', 'var(--color1)'); \n                            $('#motorOffButton').css('background-color', 'var(--color5)'); \n                            $('#motorOnButton').css('color', 'var(--color5)'); \n                            $('#motorOnButton').css('background-color', 'var(--color1)'); \n                        }\n                        else\n                        {\n                            $('#motorOffButton').css('color', 'var(--color5)'); \n                            $('#motorOffButton').css('background-color', 'var(--color1)'); \n                            $('#motorOnButton').css('color', 'var(--color1)'); \n                            $('#motorOnButton').css('background-color', 'var(--color5)'); \n                        }\n                        var motorDirection = getAttrObject('settings', 'motor-direction').value;\n                        if (motorDirection == 0)\n                        {\n                            $('#motorDirectionCCWButton').css('color', 'var(--color1)'); \n                            $('#motorDirectionCCWButton').css('background-color', 'var(--color5)'); \n                            $('#motorDirectionCWButton').css('color', 'var(--color5)'); \n                            $('#motorDirectionCWButton').css('background-color', 'var(--color1)'); \n                        }\n                        else\n                        {\n                            $('#motorDirectionCCWButton').css('color', 'var(--color5)'); \n                            $('#motorDirectionCCWButton').css('background-color', 'var(--color1)'); \n                            $('#motorDirectionCWButton').css('color', 'var(--color1)'); \n                            $('#motorDirectionCWButton').css('background-color', 'var(--color5)'); \n                        }\n                    }\n                    break;\n                case 'getJwtToken':\n                    if (msg.userID == userID) loadJwtToken(msg);\n                    break;\n                case 'settingAcknowledge':\n                    if (msg.userID == userID)\n                    {\n                        if (msg.payload != 'Success!') acknowledgeDialog('Acknowledge', 'Setting', msg.payload);\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n\n        function getAttrObject(propsName, attrName)\n        {\n            var props = device[propsName];\n            var attr = props.find(attr => attr.attr === attrName);\n            return attr;\n        }\n        function setMotorOn(motorOn)\n        {\n            if (mqttDevice == null) return;\n            var motorOnSetting = getAttrObject( 'settings', 'motor-on');\n            motorOnSetting.value = motorOn;\n            var mqttMessage = \n            {\n                topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                payload :  device\n            };\n            checkLogin(sendSettingToMqtt, mqttMessage);\n        }\n        function setMotorDirection(motorDirection)\n        {\n            if (mqttDevice == null) return;\n            var motorDirectionSetting = getAttrObject( 'settings', 'motor-direction');\n            motorDirectionSetting.value = motorDirection;\n            var mqttMessage = \n            {\n                topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                payload :  device\n            };\n            checkLogin(sendSettingToMqtt, mqttMessage);\n        }\n",
        "output": "str",
        "x": 590,
        "y": 580,
        "wires": [
            [
                "82baaa16.c743b8"
            ]
        ]
    },
    {
        "id": "cd62d45f.e79408",
        "type": "subflow:8341090a.df9758",
        "z": "8475ab9.3d26058",
        "name": "",
        "x": 1370,
        "y": 580,
        "wires": []
    },
    {
        "id": "254c3078.a1ace",
        "type": "template",
        "z": "8475ab9.3d26058",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1090,
        "y": 580,
        "wires": [
            [
                "86c59754.260268"
            ]
        ]
    },
    {
        "id": "dd585613.72b248",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "Subscribe shiver-sim Readings",
        "links": [
            "5e98ed1e.d1c5b4"
        ],
        "x": 915,
        "y": 820,
        "wires": []
    },
    {
        "id": "5e98ed1e.d1c5b4",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "Shiver-sim socket",
        "links": [
            "dd585613.72b248",
            "439b1d51.6f5e64"
        ],
        "x": 1055,
        "y": 820,
        "wires": [
            [
                "5715075f.6c2398"
            ]
        ]
    },
    {
        "id": "5715075f.6c2398",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "shiverSim/websocket",
        "server": "9d73700b.2888b",
        "client": "",
        "x": 1240,
        "y": 820,
        "wires": []
    },
    {
        "id": "17ef3390.ec1e7c",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "shiverSim/websocket",
        "server": "9d73700b.2888b",
        "client": "",
        "x": 170,
        "y": 1140,
        "wires": [
            [
                "45a7d04b.f97db"
            ]
        ]
    },
    {
        "id": "da46536a.03e36",
        "type": "template",
        "z": "8475ab9.3d26058",
        "name": "html.control",
        "field": "payload.html.control",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Control HTML -->\n                <div class='card'>\n                    <p class='card-title'>Control</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='30%'>\n                                        <span class='big-text'>Motor State</span>\n                                    </td>\n                                    <td width='25%'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"motorOffButton\" onclick=\"setMotorOn(0)\">Off</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                    </td>\n                                    <td width='25%'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"motorOnButton\" onclick=\"setMotorOn(1)\">On</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='30%'>\n                                        <span class='big-text'>Motor Direction</span>\n                                    </td>\n                                    <td width='25%'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"motorDirectionCCWButton\" onclick=\"setMotorDirection(0)\">&#8634;</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                    </td>\n                                    <td width='25%'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"motorDirectionCWButton\" onclick=\"setMotorDirection(1)\">&#8635;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row' style='padding-top: 35px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='75%'>\n                                        <span class='big-text'>Motor Speed</span>\n                                    </td>\n                                    <td width='25%'  align='right'>\n                                        <span class='big-text bold-text' id='motorSpeed'>0</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%'></td>\n                                    <td width='80%' align='center'><div id=\"motorSpeedSlider\"></div></td>\n                                    <td width='10%'></td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 930,
        "y": 580,
        "wires": [
            [
                "254c3078.a1ace"
            ]
        ]
    },
    {
        "id": "80b3fbd.ba21908",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getNameList",
        "func": "var newMsg = \n{\n    topic           : 'getNameList',\n    userID          : msg.payload.userID,\n    payload         : [{deviceType:msg.payload.deviceType},{projection:{name:1, _id:0}}],\n    deviceType      : msg.payload.deviceType,\n    trace           : msg.payload.trace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 340,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "818972ac.61492",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse name list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numNames = objectLength(msg.payload);\nvar nameList = [];\n\nfor (var iname = 0; iname < numNames; ++iname)\n{\n    nameList[iname] = msg.payload[iname].name;\n}\nreturn {\n    topic:'getNameList',\n    payload:{\n        topic           : 'getNameList',\n        nameList        : nameList,\n        userID          : msg.userID,\n        deviceType      : msg.deviceType,\n        trace           : msg.trace,\n    }\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1240,
        "y": 340,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "fa0c0cab.d9876",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "javascript.specialscalar",
        "field": "payload.javascript.specialscalar",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var editedTrace = -1;\n        \n        function onDocumentReadySpecial()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#editDeviceButton'+ itrace.toString()).hide();\n            }\n        }\n        function onWebSocketMessageSpecial(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'getJwtToken':\n                    loadJwtToken(msg);\n                    break;\n                case 'settingAcknowledge':\n                    acknowledgeDialog('Acknowledge', 'Setting', msg.payload);\n                    break;\n                default:\n                // code block\n            }\n        }\n        $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" ); permitGetDeviceValues = true;},\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(itrace)\n        {\n            permitGetDeviceValues = false;\n            editedTrace = itrace;\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\");    \n            $( \"#editDeviceDialogAttribute\").html(devInfo[itrace].deviceType + '-'  + devInfo[itrace].name + '-'  + devInfo[itrace].prop + '-'  + devInfo[itrace].attr);\n            var attr = getAttrObject(devInfo[itrace].device, itrace);\n            $( \"#attrValue\").val(attr.value);\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = getAttrObject(devInfo[editedTrace].device, editedTrace);\n            if (isNaN($('#attrValue').val()) \n                || isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                permitGetDeviceValues = true;\n                acknowledgeDialog('Error', 'Entry not a number!', attr.attr);\n                return;\n            }\n\n            attr.value = Number($( \"#attrValue\").val());\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n//            console.log(devInfo[editedTrace].device);\n            var mqttMessage = \n            {\n                topic   : projectName + '/' + devInfo[editedTrace].device.deviceType + '/' + devInfo[editedTrace].device.name + '/setting',\n                payload :  devInfo[editedTrace].device\n            };\n            checkLogin(sendSettingToMqtt, mqttMessage);\n            permitGetDeviceValues = true;\n        }\n        function loadDeviceValuesSpecial(data)\n        {\n        }\n        function clearAttrOptionListSpecial(itrace)\n        {\n            $('#editDeviceButton'+ itrace.toString()).hide();\n        }\n        function attrSelectedSpecial(itrace)\n        {\n            $('#editDeviceButton'+ itrace.toString()).show();\n        }\n\n",
        "output": "str",
        "x": 330,
        "y": 160,
        "wires": [
            [
                "93a819a0.6e9808"
            ]
        ]
    },
    {
        "id": "93a819a0.6e9808",
        "type": "subflow:df70f6f.9e4ed08",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 560,
        "y": 160,
        "wires": [
            [
                "64bfcc43.f50934"
            ]
        ]
    },
    {
        "id": "e98d4d33.bcca2",
        "type": "template",
        "z": "df70f6f.9e4ed08",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.javascript.specialscalar}}}\n{{{payload.javascript.scalardevicemenu}}}",
        "output": "str",
        "x": 420,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "da88a362.516c9",
        "type": "subflow:df70f6f.9e4ed08",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "env": [],
        "x": 560,
        "y": 40,
        "wires": [
            [
                "662fe630.391fd8"
            ]
        ]
    },
    {
        "id": "7d3145f.8eb39bc",
        "type": "subflow:df70f6f.9e4ed08",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "env": [],
        "x": 560,
        "y": 100,
        "wires": [
            [
                "c767ad27.32df7"
            ]
        ]
    },
    {
        "id": "78c1fcc3.ec6164",
        "type": "debug",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1270,
        "y": 880,
        "wires": []
    },
    {
        "id": "c143b50b.37c0a8",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getNameList",
        "func": "var newMsg = \n{\n    topic           : 'getNameList',\n    userID          : msg.payload.userID,\n    payload         : [{deviceType:msg.payload.deviceType},{projection:{name:1, _id:0}}],\n    deviceType      : msg.payload.deviceType,\n    trace           : msg.payload.trace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 300,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "7737092b.94fb48",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse name list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numNames = objectLength(msg.payload);\nvar nameList = [];\n\nfor (var iname = 0; iname < numNames; ++iname)\n{\n    nameList[iname] = msg.payload[iname].name;\n}\nreturn {\n    topic:'getNameList',\n    payload:{\n        topic           : 'getNameList',\n        nameList        : nameList,\n        userID          : msg.userID,\n        deviceType      : msg.deviceType,\n        trace           : msg.trace,\n    }\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1280,
        "y": 280,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "aea924a9.6a9e68",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "",
        "url": "/device",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "7db15dac.050a44"
            ]
        ]
    },
    {
        "id": "fe60c45b.b5b258",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "findOne",
        "x": 490,
        "y": 920,
        "wires": [
            [
                "5610900e.5ca0b"
            ]
        ]
    },
    {
        "id": "5610900e.5ca0b",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 920,
        "wires": []
    },
    {
        "id": "7db15dac.050a44",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Prep query",
        "func": "var queryMsg = \n[\n    {\n        $and    :\n        [\n            {\n                deviceType  :   msg.payload.deviceType\n            },\n            {\n                name        :   msg.payload.name\n            }\n        ]\n    },\n    {\n        projection: \n        {\n            _id :   0\n        }\n    }\n];\nmsg.payload = queryMsg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 920,
        "wires": [
            [
                "fe60c45b.b5b258"
            ]
        ]
    },
    {
        "id": "281ae8e3.adc998",
        "type": "comment",
        "z": "90f83725.6dae08",
        "name": "http://braincool-controlbox-01.local/device?deviceType=chillDetector&name=003",
        "info": "",
        "x": 340,
        "y": 880,
        "wires": []
    },
    {
        "id": "4277ca07.739f14",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Get Name",
        "func": "var deviceType = 'shiverSim';\nvar name = msg.payload.name;\nmsg.payload = {};\nmsg.payload['script'] = {};\nmsg.payload['script']['name'] = name;\nmsg.payload['script']['deviceType'] = 'shiverSim';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 580,
        "wires": [
            [
                "41fa8d81.f31114"
            ]
        ]
    },
    {
        "id": "71b75beb.7d99b4",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Get Name",
        "func": "var deviceType = 'chillDetector';\nvar name = msg.payload.name;\nmsg.payload = {};\nmsg.payload['script'] = {};\nmsg.payload['script']['name'] = name;\nmsg.payload['script']['deviceType'] = 'chillDetector';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 120,
        "wires": [
            [
                "61f6a690.76b898"
            ]
        ]
    },
    {
        "id": "6427e682.999898",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "Inject after 2 seconds",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "x": 180,
        "y": 1060,
        "wires": [
            [
                "58b2c46f.831b8c"
            ]
        ]
    },
    {
        "id": "58b2c46f.831b8c",
        "type": "exec",
        "z": "90f83725.6dae08",
        "command": "timedatectl",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Get System Time Data",
        "x": 400,
        "y": 1060,
        "wires": [
            [
                "93bceb65.3003d8"
            ],
            [],
            []
        ]
    },
    {
        "id": "93bceb65.3003d8",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check system time sync",
        "func": "var splitString = msg.payload.split('\\n');\ntimeInfo = {};\nfor (ii = 0; ii < splitString.length; ++ii)\n{\n    if (splitString[ii].indexOf(':') >= 0)\n    {\n        var timeKey = splitString[ii].substring(0,splitString[ii].indexOf(':'));\n        if (timeKey.indexOf(' ') == 0) timeKey = timeKey.substring(1);\n        var timeData = splitString[ii].substring(splitString[ii].indexOf(':') + 1);\n        if (timeData.indexOf(' ') == 0) timeData = timeData.substring(1);\n        timeKey = timeKey.replace(/\\s/g,'');\n        timeInfo[timeKey] = timeData;\n    }\n}\nvar systemClockSynchronized = true;\nif (timeInfo['Systemclocksynchronized'] == 'no') systemClockSynchronized = false;\nglobal.set('systemClockSynchronized', systemClockSynchronized);\nreturn {topic:'timeInfo',payload:timeInfo};",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 1040,
        "wires": [
            [
                "95fa04ef.3dc7a8"
            ]
        ]
    },
    {
        "id": "95fa04ef.3dc7a8",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 830,
        "y": 1040,
        "wires": []
    },
    {
        "id": "7d8868df.dde518",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/setServerTime",
        "url": "/setServerTime",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 440,
        "wires": [
            [
                "4c2ffe1e.b39ee"
            ]
        ]
    },
    {
        "id": "c08f345e.b91608",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div id='querySetup'>\n        <div class='row'>\n            <div class='col-md-12' align='center'>\n                <input class=\"form-control big-text\" id=\"serverTime\" type=\"text\"/>\n            </div>\n       </div>\n    </div>\n",
        "output": "str",
        "x": 450,
        "y": 440,
        "wires": [
            [
                "825f0c7f.2dbd8"
            ]
        ]
    },
    {
        "id": "825f0c7f.2dbd8",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Set System Time",
        "output": "str",
        "x": 570,
        "y": 440,
        "wires": [
            [
                "e7584802.07eb68"
            ]
        ]
    },
    {
        "id": "4c2ffe1e.b39ee",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(true);\n        function onDocumentReady()\n        {\n            $( function()\n            {\n                $('#serverTime').datetimepicker();\n            } );\n            jQuery.datepicker._hideDatepicker = function() {setServerTime();};\n        }\n        function onWebSocketOpen()\n        {\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getServerTime',\n                    userID      : userID\n                });\n         }\n        function onWebSocketClose()\n        {\n            \n        }\n\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getServerTime':\n                        var serverTimeDate = new Date(msg.serverTime);\n                        $('#serverTime').val(serverTimeDate.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n                        $('#serverTime').focus();\n                        break;\n                    case 'setServerTime':\n                        window.location.replace('{{{payload.parentRef}}}');\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function setServerTime()\n        {\n            var month = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n            var serverTime = new Date($( \"#serverTime\" ).val());\n            var hoursString = serverTime.getHours().toString();\n            if (serverTime.getHours() < 10) hoursString = '0' + hoursString;\n            var minsString = serverTime.getMinutes().toString();\n            if (serverTime.getMinutes() < 10) minsString = '0' + minsString;\n            var dayString = (serverTime.getDay() + 1).toString();\n            if (serverTime.getDay() < 9) dayString = '0' + dayString;\n            var dateString =  dayString + ' ' + month[serverTime.getMonth()]  + ' ' + serverTime.getFullYear().toString();\n            dateString = dateString + ' ' + hoursString + ':' + minsString + ':00';\n            \n            dateString = 'sudo date -s \"' + dateString + '\"';\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'setServerTime',\n                    userID      : userID,\n                    serverTime   : dateString,\n                });\n            \n        }\n\n",
        "output": "str",
        "x": 310,
        "y": 440,
        "wires": [
            [
                "c08f345e.b91608"
            ]
        ]
    },
    {
        "id": "ba75eb0.30b8818",
        "type": "websocket in",
        "z": "90f83725.6dae08",
        "name": "/setServerTime/websocket",
        "server": "84a0efe3.385ca",
        "client": "",
        "x": 170,
        "y": 580,
        "wires": [
            [
                "cb29f7d7.6e6728"
            ]
        ]
    },
    {
        "id": "cb29f7d7.6e6728",
        "type": "json",
        "z": "90f83725.6dae08",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 580,
        "wires": [
            [
                "496176b8.acb568"
            ]
        ]
    },
    {
        "id": "425df588.79192c",
        "type": "websocket out",
        "z": "90f83725.6dae08",
        "name": "/setServerTime/websocket",
        "server": "84a0efe3.385ca",
        "client": "",
        "x": 1240,
        "y": 560,
        "wires": []
    },
    {
        "id": "496176b8.acb568",
        "type": "switch",
        "z": "90f83725.6dae08",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getServerTime",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "setServerTime",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 580,
        "wires": [
            [
                "14e40e60.0f5e92"
            ],
            [
                "b36ee485.c65028"
            ]
        ]
    },
    {
        "id": "14e40e60.0f5e92",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Get Server Time",
        "func": "msg.payload['serverTime'] = new Date().getTime();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 560,
        "wires": [
            [
                "425df588.79192c"
            ]
        ]
    },
    {
        "id": "925da169.4d3ef",
        "type": "exec",
        "z": "90f83725.6dae08",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 770,
        "y": 620,
        "wires": [
            [
                "3d35e6b.324221a"
            ],
            [],
            []
        ]
    },
    {
        "id": "b36ee485.c65028",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Set Server Time",
        "func": "return {topic : 'setServerTime', payload: msg.payload.serverTime, userID: msg.payload.userID};",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 620,
        "wires": [
            [
                "925da169.4d3ef"
            ]
        ]
    },
    {
        "id": "3d35e6b.324221a",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Set Time Sync Completed",
        "func": "global.set('systemClockSynchronized', true);\nreturn {topic:'timeInfo',payload:{topic : 'setServerTime', payload: {} , userID: msg.userID}};",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 620,
        "wires": [
            [
                "425df588.79192c"
            ]
        ]
    },
    {
        "id": "e7584802.07eb68",
        "type": "subflow:f22a539a.a67b3",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 710,
        "y": 440,
        "wires": []
    },
    {
        "id": "b443db02.709c08",
        "type": "template",
        "z": "8475ab9.3d26058",
        "name": "script.horzbarWidget",
        "field": "payload.script.horzbarWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Horz Bar Widget\n        function setHorzBarWidget(barConfig)\n        {\n            var lowValue = 0;\n            var mediumValue = 0;\n            var highValue = 0;\n        \n            var lowColor = barConfig.backgroundColor;\n            var mediumColor = barConfig.backgroundColor;\n            var highColor = barConfig.backgroundColor;\n            var valueColor = barConfig.backgroundColor; \n            \n            if ( barConfig.value <= barConfig.lolo)\n            {\n                lowValue = barConfig.lolo;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.lolo <= barConfig.value) && (barConfig.value < barConfig.low) )\n            {\n                lowValue = barConfig.value;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.low  <= barConfig.value) && (barConfig.value < barConfig.high) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.value - barConfig.low; \n                lowColor = barConfig.mediumColor;\n                mediumColor = barConfig.mediumColor;\n                valueColor = mediumColor;\n        \n            }\n            if ( (barConfig.high <= barConfig.value) && (barConfig.value < barConfig.hihi) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low;\n                highValue = barConfig.value - barConfig.high;\n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            if ( barConfig.hihi <= barConfig.value)\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low; \n                highValue = barConfig.hihi - barConfig.high; \n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            \n            var lowBar = \n            {\n                y: ['', '-'],\n                x: [ barConfig.low, lowValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.lowColor, lowColor]},\n              width: [0.1, 1.0],\n            };\n            var mediumBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.high - barConfig.low, mediumValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.mediumColor, mediumColor]},\n              width: [0.1, 1.0],\n            };\n            var highBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.hihi - barConfig.high, highValue],\n                orientation: 'h',\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.highColor, highColor]},\n              width: [0.1, 1.0],\n            };\n            var layout = \n                {\n                    barmode: 'stack',\n                    plot_bgcolor:barConfig.backgroundColor,\n                    paper_bgcolor:barConfig.backgroundColor,\n                    margin: \n                        {\n                            t: 70, //top margin\n                            l: 20, //left margin\n                            r: 20, //right margin\n                            b: 70 //bottom margin\n                        },\n \n                    height: barConfig.height,\n                    title: \n                        {\n                            text: barConfig.value.toString() + ' ' + barConfig.unit,\n                            font: {color: valueColor, size:barConfig.textsize},\n                        },\n                    yaxis: \n                        {\n                            tickfont: {color:valueColor, size:barConfig.textsize}\n                        },\n                    xaxis: \n                        {\n                            range: [barConfig.lolo, barConfig.hihi],\n                            tickfont: {color:barConfig.labelColor, size:barConfig.textsize},\n                            gridcolor       : barConfig.gridColor\n\n                        },\n                };\n           Plotly.newPlot(barConfig.htmlId, [lowBar, mediumBar, highBar], layout, {'displayModeBar': false});\n        }\n        \n        \n        \n        \n        \n    \n",
        "output": "str",
        "x": 600,
        "y": 160,
        "wires": [
            [
                "75feff69.10cda"
            ]
        ]
    },
    {
        "id": "137901c4.7a7ede",
        "type": "template",
        "z": "8475ab9.3d26058",
        "name": "html.ultraAmpBar",
        "field": "payload.html.ultraAmpBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-3'>\n                        </div>\n                        <div class='col-md-6'>\n                            <p class='card-title'>UltraSound Amplitude</p>\n                         </div>\n                        <div class='col-md-3'>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <div class='col-md-12'>\n                                <div id=\"ultraAmpBarPlot\" width=\"100%\" ></div>\n                           </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 830,
        "y": 280,
        "wires": [
            [
                "d50f5591.4cdab8"
            ]
        ]
    },
    {
        "id": "d50f5591.4cdab8",
        "type": "template",
        "z": "8475ab9.3d26058",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 810,
        "y": 320,
        "wires": [
            [
                "6ee884d5.e2b2bc"
            ]
        ]
    }
]